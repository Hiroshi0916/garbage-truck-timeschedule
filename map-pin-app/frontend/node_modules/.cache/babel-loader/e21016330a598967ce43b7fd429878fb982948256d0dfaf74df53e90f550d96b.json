{"ast":null,"code":"var _jsxFileName = \"/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/UserRegistration.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./UserRegistration\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserRegistration = () => {\n  _s();\n  const [newUserName, setNewUserName] = useState(\"\");\n  const [newAddress, setNewAddress] = useState(\"\");\n  const [newUserEmail, setNewUserEmail] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  useEffect(() => {\n    const storedUsers = localStorage.getItem(\"users\");\n    if (storedUsers) {\n      setUsers(JSON.parse(storedUsers));\n    }\n  }, []);\n\n  // ユーザーリストが変更された時にローカルストレージを更新する\n  useEffect(() => {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  }, [users]);\n  const handleRegister = () => {\n    if (validateForm()) {\n      const newUser = {\n        id: Date.now(),\n        userName: newUserName,\n        address: newAddress\n        // Add userEmail to newUser if needed\n      };\n\n      setUsers([...users, newUser]);\n      // Clear the form fields\n      setNewUserName(\"\");\n      setNewAddress(\"\");\n      setNewUserEmail(\"\"); // Clear userEmail if state hook is added\n      setErrors({});\n    }\n  };\n  const handleRegisterOrSave = () => {\n    // 編集モードであるか新規登録モードであるかを判定し、\n    // 対応する処理を行います。\n    if (editingId === null) {\n      // 新規登録処理\n      if (validateForm()) {\n        const newUser = {\n          id: Date.now(),\n          // 本番環境ではもっと信頼性の高いID生成方法を使用してください\n          userName: newUserName,\n          address: newAddress,\n          email: newUserEmail // 新しいメールアドレスも登録する\n        };\n\n        setUsers([...users, newUser]);\n        resetForm();\n      }\n    } else {\n      // 編集保存処理\n      handleSave();\n    }\n  };\n\n  // フォームをリセットする関数を作成します。\n  const resetForm = () => {\n    setNewUserName(\"\");\n    setNewAddress(\"\");\n    setNewUserEmail(\"\");\n    setEditingId(null);\n    setErrors({});\n  };\n  const handleSave = () => {\n    if (editingId !== null && validateForm()) {\n      setUsers(users.map(user => {\n        if (user.id === editingId) {\n          return {\n            ...user,\n            userName: newUserName,\n            address: newAddress,\n            email: newUserEmail // Set isEditing flag to false after saving\n          };\n        }\n\n        return user;\n      }));\n      // Reset the form and editing state\n      setEditingId(null);\n      setNewUserName(\"\");\n      setNewAddress(\"\");\n      // setNewUserEmail(\"\");\n      setErrors({});\n    }\n  };\n  const handleEdit = id => {\n    const user = users.find(u => u.id === id);\n    if (user) {\n      setEditingId(id);\n      setNewUserName(user.userName);\n      setNewAddress(user.address);\n      // Set the email if you're using it\n      // setNewUserEmail(user.email);\n      // Set isEditing flag to true for the editing user\n      setUsers(users.map(u => u.id === id ? {\n        ...u,\n        isEditing: true\n      } : u));\n    }\n  };\n  const validateForm = () => {\n    let formIsValid = true;\n    let tempErrors = {};\n    if (!newUserName.trim()) {\n      formIsValid = false;\n      tempErrors.userName = \"ユーザー名を入力してください。\";\n    }\n    if (!newAddress.trim()) {\n      formIsValid = false;\n      tempErrors[\"address\"] = \"住所を入力してください。\";\n    }\n    setErrors(tempErrors); // Update the errors state\n    return formIsValid;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u540D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newUserName,\n                onChange: e => setNewUserName(e.target.value),\n                placeholder: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u540D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 17\n              }, this), errors.userName && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u30A2\\u30C9\\u30EC\\u30B9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newUserEmail,\n                onChange: e => setNewUserEmail(e.target.value),\n                placeholder: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u30A2\\u30C9\\u30EC\\u30B9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u5C45\\u4F4F\\u5730\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newAddress,\n                onChange: e => setNewAddress(e.target.value),\n                placeholder: \"\\u5C45\\u4F4F\\u5730\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 17\n              }, this), errors.address && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegisterOrSave,\n        children: editingId === null ? \"保存\" : \"編集\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 7\n    }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [user.userName, \" - \", user.address, \" \", user.email && `- ${user.email}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEdit(user.id),\n        children: \"\\u7DE8\\u96C6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 9\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n};\n_s(UserRegistration, \"JHfEoNNmavboolDnCR48PCjUQ50=\");\n_c = UserRegistration;\nexport default UserRegistration;\nvar _c;\n$RefreshReg$(_c, \"UserRegistration\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","UserRegistration","_s","newUserName","setNewUserName","newAddress","setNewAddress","newUserEmail","setNewUserEmail","errors","setErrors","storedUsers","localStorage","getItem","setUsers","JSON","parse","setItem","stringify","users","handleRegister","validateForm","newUser","id","Date","now","userName","address","handleRegisterOrSave","editingId","email","resetForm","handleSave","setEditingId","map","user","handleEdit","find","u","isEditing","formIsValid","tempErrors","trim","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/UserRegistration.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./UserRegistration\";\n\ninterface Errors {\n  userName?: string;\n  postalCode?: string;\n  address?: string;\n}\n\ninterface User {\n  id: number;\n  userName: string;\n  postalCode?: string;\n  address: string;\n  email?: string;\n  isEditing?: boolean;\n}\n\nconst UserRegistration = () => {\n  const [newUserName, setNewUserName] = useState<string>(\"\");\n  const [newAddress, setNewAddress] = useState<string>(\"\");\n  const [newUserEmail, setNewUserEmail] = useState<string>(\"\");\n  const [errors, setErrors] = useState<Errors>({});\n\n\n\n  useEffect(() => {\n    const storedUsers = localStorage.getItem(\"users\");\n    if (storedUsers) {\n      setUsers(JSON.parse(storedUsers));\n    }\n  }, []);\n\n  // ユーザーリストが変更された時にローカルストレージを更新する\n  useEffect(() => {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  }, [users]);\n\n  const handleRegister = () => {\n    if (validateForm()) {\n      const newUser: User = {\n        id: Date.now(),\n        userName: newUserName,\n        address: newAddress,\n        // Add userEmail to newUser if needed\n      };\n      setUsers([...users, newUser]);\n      // Clear the form fields\n      setNewUserName(\"\");\n      setNewAddress(\"\");\n      setNewUserEmail(\"\"); // Clear userEmail if state hook is added\n      setErrors({});\n    }\n  };\n\n  const handleRegisterOrSave = () => {\n    // 編集モードであるか新規登録モードであるかを判定し、\n    // 対応する処理を行います。\n    if (editingId === null) {\n      // 新規登録処理\n      if (validateForm()) {\n        const newUser: User = {\n          id: Date.now(), // 本番環境ではもっと信頼性の高いID生成方法を使用してください\n          userName: newUserName,\n          address: newAddress,\n          email: newUserEmail, // 新しいメールアドレスも登録する\n        };\n        setUsers([...users, newUser]);\n        resetForm();\n      }\n    } else {\n      // 編集保存処理\n      handleSave();\n    }\n  };\n\n  // フォームをリセットする関数を作成します。\n  const resetForm = () => {\n    setNewUserName(\"\");\n    setNewAddress(\"\");\n    setNewUserEmail(\"\");\n    setEditingId(null);\n    setErrors({});\n  };\n\n  const handleSave = () => {\n    if (editingId !== null && validateForm()) {\n      setUsers(\n        users.map((user) => {\n          if (user.id === editingId) {\n            return {\n              ...user,\n              userName: newUserName,\n              address: newAddress,\n              email: newUserEmail, // Set isEditing flag to false after saving\n            };\n          }\n          return user;\n        })\n      );\n      // Reset the form and editing state\n      setEditingId(null);\n      setNewUserName(\"\");\n      setNewAddress(\"\");\n      // setNewUserEmail(\"\");\n      setErrors({});\n    }\n  };\n\n  const handleEdit = (id: number) => {\n    const user = users.find((u) => u.id === id);\n    if (user) {\n      setEditingId(id);\n      setNewUserName(user.userName);\n      setNewAddress(user.address);\n      // Set the email if you're using it\n      // setNewUserEmail(user.email);\n      // Set isEditing flag to true for the editing user\n      setUsers(users.map((u) => (u.id === id ? { ...u, isEditing: true } : u)));\n    }\n  };\n\n  const validateForm = () => {\n    let formIsValid = true;\n    let tempErrors: Errors = {};\n\n    if (!newUserName.trim()) {\n      formIsValid = false;\n      tempErrors.userName = \"ユーザー名を入力してください。\";\n    }\n    if (!newAddress.trim()) {\n      formIsValid = false;\n      tempErrors[\"address\"] = \"住所を入力してください。\";\n    }\n\n    setErrors(tempErrors); // Update the errors state\n    return formIsValid;\n  };\n\n  return (\n    <div>\n      <div className=\"table-container\">\n        <table className=\"table\">\n          <tbody>\n            <tr>\n              <th>ユーザー名</th>\n              <td>\n                <input\n                  type=\"text\"\n                  value={newUserName}\n                  onChange={(e) => setNewUserName(e.target.value)}\n                  placeholder=\"ユーザー名\"\n                />\n                {errors.userName && (\n                  <div className=\"error\">{errors.userName}</div>\n                )}\n              </td>\n            </tr>\n            <tr>\n            <th>ユーザーアドレス</th>\n  <td>\n    <input\n      type=\"text\"\n      value={newUserEmail}\n      onChange={(e) => setNewUserEmail(e.target.value)}\n      placeholder=\"ユーザーアドレス\"\n    />\n    {/* Implement error display for newUserEmail if applicable */}\n  </td>\n            </tr>\n            <tr>\n              <th>居住地</th>\n              <td>\n                <input\n                  type=\"text\"\n                  value={newAddress}\n                  onChange={(e) => setNewAddress(e.target.value)}\n                  placeholder=\"居住地\"\n                />\n                {errors.address && (\n                  <div className=\"error\">{errors.address}</div>\n                )}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"button-container\">\n        <button onClick={handleRegisterOrSave}>\n          {editingId === null ? \"保存\" : \"編集\"}\n        </button>\n      </div>\n\n      {/* ユーザー表示部分 */}\n      {users.map((user) => (\n        <div key={user.id} className=\"user-item\">\n          <span>\n            {user.userName} - {user.address} {user.email && `- ${user.email}`}\n          </span>\n          <button onClick={() => handleEdit(user.id)}>編集</button>\n        </div>\n      ))}\n    </div>\n  );\n};\n\n\nexport default UserRegistration;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}