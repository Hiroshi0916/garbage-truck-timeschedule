{"ast":null,"code":"var _jsxFileName = \"/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/App.tsx\",\n  _s2 = $RefreshSig$();\nimport React, { useCallback, useEffect, useRef } from \"react\";\nimport { GoogleMap, LoadScript } from \"@react-google-maps/api\";\nimport Navbar from \"./Navbar\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Direction from \"./Direction\";\nimport AdminPage from \"./AdminPage\";\nimport { SearchForm } from \"./SearchForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = process.env.REACT_APP_BACKEND_URL;\nfunction App() {\n  _s2();\n  var _s = $RefreshSig$();\n  const getCurrentLocation = useCallback(async () => {\n    try {\n      const response = await fetch(\"/current-location\");\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  }, []);\n  const handleSearch = async (address, postalCode) => {\n    // ここで住所または郵便番号に基づいて検索処理を行い、結果を onSearch コールバックに渡す\n    console.log(\"Sending address:\", address);\n    try {\n      const response = await fetch(`${BASE_URL}/geocode?address=${address || postalCode}`, {\n        method: \"GET\"\n      });\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      if (data.status === \"OK\") {\n        const location = data.results[0].geometry.location;\n        console.log(location);\n      } else {\n        console.error(\"Error fetching coordinates:\", data.status);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  // マップのスタイルと初期位置\n  const mapContainerStyle = {\n    width: \"100%\",\n    height: \"400px\"\n  };\n  const defaultPosition = {\n    lat: 35.681236,\n    lng: 139.767125\n  }; // 東京駅\n\n  _s(useEffect(_s(() => {\n    _s();\n    const googleMapRef = useRef();\n\n    // GoogleMap コンポーネントがマウントされたら、DirectionsRenderer コンポーネントをレンダリングする\n    const onGoogleMapMounted = () => {\n      setGoogleMap(googleMapRef.current);\n      if (googleMap) {\n        /*#__PURE__*/_jsxDEV(Direction, {\n          googleMap: googleMap\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 9\n        }, this);\n      }\n    };\n\n    // GoogleMap コンポーネントがアンマウントされたら、DirectionsRenderer コンポーネントをレンダリングしない\n    const onGoogleMapUnmounted = () => {\n      setGoogleMap(undefined);\n    };\n    googleMapRef.current = new GoogleMap({\n      key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n      mapContainerStyle,\n      center: defaultPosition,\n      zoom: 10\n    });\n    googleMapRef.current.on(\"mount\", onGoogleMapMounted);\n    googleMapRef.current.on(\"unmount\", onGoogleMapUnmounted);\n    return () => {\n      googleMapRef.current.off(\"mount\", onGoogleMapMounted);\n      googleMapRef.current.off(\"unmount\", onGoogleMapUnmounted);\n    };\n  }, \"W+FDIz/Ycp7GD3DHPEHD2JAd6N0=\"), []), \"W+FDIz/Ycp7GD3DHPEHD2JAd6N0=\");\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || \"\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App-layout\",\n            children: [/*#__PURE__*/_jsxDEV(SearchForm, {\n              onSearch: handleSearch,\n              onGetCurrentLocation: getCurrentLocation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(GoogleMap, {\n              // ルートのパスをキーとして使用\n              mapContainerStyle: mapContainerStyle,\n              center: defaultPosition,\n              zoom: 10,\n              children: /*#__PURE__*/_jsxDEV(Direction, {\n                googleMap: googleMap\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)\n            }, window.location.pathname, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin\",\n          element: /*#__PURE__*/_jsxDEV(AdminPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n_s2(App, \"8TRc8ntmFwurWKT+/uMGdH+fv6E=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useEffect","useRef","GoogleMap","LoadScript","Navbar","BrowserRouter","Router","Routes","Route","Direction","AdminPage","SearchForm","jsxDEV","_jsxDEV","BASE_URL","process","env","REACT_APP_BACKEND_URL","App","_s2","_s","$RefreshSig$","getCurrentLocation","response","fetch","ok","Error","error","console","handleSearch","address","postalCode","log","method","data","json","status","location","results","geometry","mapContainerStyle","width","height","defaultPosition","lat","lng","googleMapRef","onGoogleMapMounted","setGoogleMap","current","googleMap","fileName","_jsxFileName","lineNumber","columnNumber","onGoogleMapUnmounted","undefined","key","REACT_APP_GOOGLE_MAPS_API_KEY","center","zoom","on","off","googleMapsApiKey","children","path","element","className","onSearch","onGetCurrentLocation","window","pathname","_c","$RefreshReg$"],"sources":["/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/App.tsx"],"sourcesContent":["import React, { useCallback, useEffect, useRef } from \"react\";\nimport { GoogleMap, LoadScript } from \"@react-google-maps/api\";\nimport Navbar from \"./Navbar\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport Direction from \"./Direction\";\nimport AdminPage from \"./AdminPage\";\nimport { SearchForm } from \"./SearchForm\";\n\nconst BASE_URL = process.env.REACT_APP_BACKEND_URL;\n\nfunction App() {\n  const getCurrentLocation = useCallback(async () => {\n    try {\n      const response = await fetch(\"/current-location\");\n\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  }, []);\n\n  const handleSearch = async (address: string, postalCode: string) => {\n    // ここで住所または郵便番号に基づいて検索処理を行い、結果を onSearch コールバックに渡す\n    console.log(\"Sending address:\", address);\n    try {\n      const response = await fetch(\n        `${BASE_URL}/geocode?address=${address || postalCode}`,\n        {\n          method: \"GET\",\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n      const data = await response.json();\n\n      if (data.status === \"OK\") {\n        const location = data.results[0].geometry.location;\n        console.log(location);\n      } else {\n        console.error(\"Error fetching coordinates:\", data.status);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  // マップのスタイルと初期位置\n  const mapContainerStyle = {\n    width: \"100%\",\n    height: \"400px\",\n  };\n  const defaultPosition = { lat: 35.681236, lng: 139.767125 }; // 東京駅\n\n  useEffect(() => {\n    const googleMapRef = useRef<GoogleMap>();\n\n    // GoogleMap コンポーネントがマウントされたら、DirectionsRenderer コンポーネントをレンダリングする\n    const onGoogleMapMounted = () => {\n      setGoogleMap(googleMapRef.current);\n      if (googleMap) {\n        <Direction googleMap={googleMap} />;\n      }\n    };\n\n    // GoogleMap コンポーネントがアンマウントされたら、DirectionsRenderer コンポーネントをレンダリングしない\n    const onGoogleMapUnmounted = () => {\n      setGoogleMap(undefined);\n    };\n\n    googleMapRef.current = new GoogleMap({\n      key: process.env.REACT_APP_GOOGLE_MAPS_API_KEY,\n      mapContainerStyle,\n      center: defaultPosition,\n      zoom: 10,\n    });\n\n    googleMapRef.current.on(\"mount\", onGoogleMapMounted);\n    googleMapRef.current.on(\"unmount\", onGoogleMapUnmounted);\n    return () => {\n      googleMapRef.current.off(\"mount\", onGoogleMapMounted);\n      googleMapRef.current.off(\"unmount\", onGoogleMapUnmounted);\n    };\n  }, []);\n\n  return (\n    <LoadScript\n      googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY || \"\"}\n    >\n      <Router>\n        <Navbar />\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <div className=\"App-layout\">\n                <SearchForm\n                  onSearch={handleSearch}\n                  onGetCurrentLocation={getCurrentLocation}\n                />\n\n                <GoogleMap\n                   key={window.location.pathname} // ルートのパスをキーとして使用\n                  mapContainerStyle={mapContainerStyle}\n                  center={defaultPosition}\n                  zoom={10}\n                >\n                  <Direction googleMap={googleMap} />\n                </GoogleMap>\n              </div>\n            }\n          />\n          <Route path=\"/admin\" element={<AdminPage />} />\n        </Routes>\n      </Router>\n    </LoadScript>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}