{"ast":null,"code":"var _jsxFileName = \"/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport { GoogleMap, LoadScript, DirectionsRenderer } from \"@react-google-maps/api\";\nimport Navbar from \"./Navbar\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport UserRegistration from \"./UserRegistration\";\nimport AdminPage from \"./AdminPage\";\nimport UserProfile from \"./UserProfile\";\nimport UserEditForm from \"./UserEditForm\";\n\n// DirectionsResult は google.maps 名前空間からインポート\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = process.env.REACT_APP_BACKEND_URL;\nconst defaultPosition = {\n  lat: 35.681236,\n  lng: 139.767125\n};\nfunction App() {\n  _s();\n  const mapContainerStyle = {\n    width: \"100%\",\n    height: \"400px\"\n  };\n  const [address, setAddress] = useState(\"\");\n  const [postalCode, setPostalCode] = useState(\"\");\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n  const [position, setPosition] = useState(defaultPosition);\n  const [addresses, setAddresses] = useState([]);\n  const [directionsResponse, setDirectionsResponse] = useState(null);\n  const [currentLocation, setCurrentLocation] = useState(null);\n  const lastAddress = addresses[addresses.length - 1];\n  let destination;\n  const waypoints = addresses.map(addr => {\n    if (addr.latitude !== undefined && addr.longitude !== undefined) {\n      return {\n        location: new google.maps.LatLng(addr.latitude, addr.longitude),\n        stopover: true\n      };\n    }\n    return null;\n  }).filter(wp => wp !== null);\n  if (lastAddress && lastAddress.latitude !== undefined && lastAddress.longitude !== undefined) {\n    destination = new google.maps.LatLng(lastAddress.latitude, lastAddress.longitude);\n  }\n  const directionsServiceOptions = {\n    origin: currentLocation,\n    destination: destination,\n    waypoints: waypoints,\n    travelMode: google.maps.TravelMode.DRIVING\n  };\n\n  // 住所のリストを更新する関数（例えば、APIから取得したり、ユーザーの入力に基づいて更新したりする）\n  const updateAddresses = newAddresses => {\n    setAddresses(newAddresses);\n  };\n\n  // 現在地を取得するロジック（例えば、ブラウザの Geolocation APIを使用）\n  const fetchCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        setCurrentLocation({\n          lat: position.coords.latitude,\n          lng: position.coords.longitude\n        });\n      }, () => {\n        console.error(\"Error getting the location\");\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  };\n  const handleSearch = async () => {\n    console.log(\"Sending address:\", address);\n    try {\n      const response = await fetch(`${BASE_URL}/geocode?address=${address || postalCode}`, {\n        method: \"GET\" // GETリクエストでバックエンドに送信\n      });\n\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      if (data.status === \"OK\") {\n        const location = data.results[0].geometry.location;\n        console.log(location);\n        setPosition({\n          lat: location.lat,\n          lng: location.lng\n        });\n        setLat(location.lat);\n        setLng(location.lng);\n      } else {\n        console.error(\"Error fetching coordinates:\", data.status);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  const getCurrentLocation = useCallback(async () => {\n    try {\n      const response = await fetch(\"/current-location\");\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      if (data.location) {\n        setPosition({\n          lat: data.location.lat,\n          lng: data.location.lng\n        });\n        setLat(data.location.lat);\n        setLng(data.location.lng);\n      } else {\n        console.error(\"Error fetching current location\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  }, []);\n\n  // マップ読み込み時の処理\n  const handleMapLoad = map => {\n    console.log(\"Position:\", position);\n    console.log(\"Google Map is loaded!\", map);\n  };\n  const handleMapClick = e => {\n    console.log(\"Map clicked at:\", e.latLng.toString());\n  };\n  const calculateRoute = async () => {\n    if (!currentLocation || addresses.length === 0) return;\n    const waypoints = addresses.map(addr => {\n      if (addr.latitude === undefined || addr.longitude === undefined) {\n        // ここでエラーを処理するか、適切なフォールバックを提供する\n      }\n      return {\n        location: new google.maps.LatLng(addr.latitude, addr.longitude),\n        stopover: true\n      };\n    });\n    const directionsServiceOptions = {\n      origin: currentLocation,\n      destination: addresses[addresses.length - 1],\n      // 最後の住所を目的地とする\n      waypoints: waypoints,\n      travelMode: google.maps.TravelMode.DRIVING\n    };\n    const directionsService = new google.maps.DirectionsService();\n    directionsService.route(directionsServiceOptions, (result, status) => {\n      if (status === google.maps.DirectionsStatus.OK && result) {\n        setDirectionsResponse(result);\n      } else {\n        console.error(`error fetching directions ${result}`);\n      }\n    });\n  };\n\n  // DirectionsRenderer コンポーネントの追加\n  const renderDirections = () => {\n    if (directionsResponse) {\n      return /*#__PURE__*/_jsxDEV(DirectionsRenderer, {\n        options: {\n          directions: directionsResponse\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 9\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || \"\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App-layout\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"App-search-container\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"App-input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"\\u4F4F\\u6240:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"App-input\",\n                  value: address,\n                  onChange: e => setAddress(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 220,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"App-input-group\",\n                children: [/*#__PURE__*/_jsxDEV(\"label\", {\n                  children: \"\\u90F5\\u4FBF\\u756A\\u53F7:\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 227,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n                  className: \"App-input\",\n                  value: postalCode,\n                  onChange: e => setPostalCode(e.target.value)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 226,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"App-button\",\n                onClick: getCurrentLocation,\n                children: \"\\u73FE\\u5728\\u5730\\u3092\\u53D6\\u5F97\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n                className: \"App-button\",\n                onClick: handleSearch,\n                children: \"\\u691C\\u7D22\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"App-coordinates\",\n                children: [\"\\u7DEF\\u5EA6: \", lat ? lat.toFixed(6) : \"N/A\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 21\n                }, this), \"\\u7D4C\\u5EA6: \", lng ? lng.toFixed(6) : \"N/A\"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 240,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"App-map-container\",\n              children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n                mapContainerStyle: mapContainerStyle,\n                center: position,\n                zoom: 13,\n                onLoad: handleMapLoad,\n                onClick: handleMapClick,\n                children: renderDirections()\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 216,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 213,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user-registration\",\n          element: /*#__PURE__*/_jsxDEV(UserRegistration, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 262,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin\",\n          element: /*#__PURE__*/_jsxDEV(AdminPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 263,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user/profile\",\n          element: /*#__PURE__*/_jsxDEV(UserProfile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 264,\n            columnNumber: 48\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 264,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/user/edit\",\n          element: /*#__PURE__*/_jsxDEV(UserEditForm, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 265,\n            columnNumber: 45\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 265,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"UTyGeAzKvklLS1nFfb2N7FRQ+hw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useState","GoogleMap","LoadScript","DirectionsRenderer","Navbar","BrowserRouter","Router","Routes","Route","UserRegistration","AdminPage","UserProfile","UserEditForm","jsxDEV","_jsxDEV","BASE_URL","process","env","REACT_APP_BACKEND_URL","defaultPosition","lat","lng","App","_s","mapContainerStyle","width","height","address","setAddress","postalCode","setPostalCode","setLat","setLng","position","setPosition","addresses","setAddresses","directionsResponse","setDirectionsResponse","currentLocation","setCurrentLocation","lastAddress","length","destination","waypoints","map","addr","latitude","undefined","longitude","location","google","maps","LatLng","stopover","filter","wp","directionsServiceOptions","origin","travelMode","TravelMode","DRIVING","updateAddresses","newAddresses","fetchCurrentLocation","navigator","geolocation","getCurrentPosition","coords","console","error","handleSearch","log","response","fetch","method","ok","Error","data","json","status","results","geometry","getCurrentLocation","handleMapLoad","handleMapClick","e","latLng","toString","calculateRoute","directionsService","DirectionsService","route","result","DirectionsStatus","OK","renderDirections","options","directions","fileName","_jsxFileName","lineNumber","columnNumber","googleMapsApiKey","REACT_APP_GOOGLE_MAPS_API_KEY","children","path","element","className","value","onChange","target","onClick","toFixed","center","zoom","onLoad","_c","$RefreshReg$"],"sources":["/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/App.tsx"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport {\n  GoogleMap,\n  LoadScript,\n  DirectionsRenderer,\n} from \"@react-google-maps/api\";\n\nimport Navbar from \"./Navbar\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport UserRegistration from \"./UserRegistration\";\nimport AdminPage from \"./AdminPage\";\nimport UserProfile from \"./UserProfile\";\nimport UserEditForm from \"./UserEditForm\";\nimport { AddressInfo } from \"./types\";\n\n// DirectionsResult は google.maps 名前空間からインポート\ntype DirectionsResult = google.maps.DirectionsResult;\n\nconst BASE_URL = process.env.REACT_APP_BACKEND_URL;\n\nconst defaultPosition = {\n  lat: 35.681236,\n  lng: 139.767125,\n};\n\nfunction App() {\n  const mapContainerStyle = {\n    width: \"100%\",\n    height: \"400px\",\n  };\n  const [address, setAddress] = useState(\"\");\n  const [postalCode, setPostalCode] = useState(\"\");\n  const [lat, setLat] = useState<number | null>(null);\n  const [lng, setLng] = useState<number | null>(null);\n\n  const [position, setPosition] = useState<\n    { lat: number; lng: number } | undefined\n  >(defaultPosition);\n  const [addresses, setAddresses] = useState<AddressInfo[]>([]);\n\n  const [directionsResponse, setDirectionsResponse] =\n    useState<DirectionsResult | null>(null);\n  const [currentLocation, setCurrentLocation] = useState<{\n    lat: number;\n    lng: number;\n  } | null>(null);\n\nconst lastAddress = addresses[addresses.length - 1];\n\nlet destination;\n\nconst waypoints = addresses.map(addr => {\n  if (addr.latitude !== undefined && addr.longitude !== undefined) {\n    return {\n      location: new google.maps.LatLng(addr.latitude, addr.longitude),\n      stopover: true\n    };\n  }\n  return null;\n}).filter(wp => wp !== null);\n\nif (lastAddress && lastAddress.latitude !== undefined && lastAddress.longitude !== undefined) {\n  destination = new google.maps.LatLng(lastAddress.latitude, lastAddress.longitude);\n}\n\nconst directionsServiceOptions = {\n  origin: currentLocation,\n  destination: destination,\n  waypoints: waypoints,\n  travelMode: google.maps.TravelMode.DRIVING,\n};\n\n\n  // 住所のリストを更新する関数（例えば、APIから取得したり、ユーザーの入力に基づいて更新したりする）\nconst updateAddresses = (newAddresses: AddressInfo[]) => {\n  setAddresses(newAddresses);\n};\n\n  // 現在地を取得するロジック（例えば、ブラウザの Geolocation APIを使用）\n  const fetchCurrentLocation = () => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          setCurrentLocation({\n            lat: position.coords.latitude,\n            lng: position.coords.longitude,\n          });\n        },\n        () => {\n          console.error(\"Error getting the location\");\n        }\n      );\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  };\n\n  const handleSearch = async () => {\n    console.log(\"Sending address:\", address);\n    try {\n      const response = await fetch(\n        `${BASE_URL}/geocode?address=${address || postalCode}`,\n        {\n          method: \"GET\", // GETリクエストでバックエンドに送信\n        }\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n      const data = await response.json();\n\n      if (data.status === \"OK\") {\n        const location = data.results[0].geometry.location;\n        console.log(location);\n        setPosition({ lat: location.lat, lng: location.lng });\n        setLat(location.lat);\n        setLng(location.lng);\n      } else {\n        console.error(\"Error fetching coordinates:\", data.status);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  const getCurrentLocation = useCallback(async () => {\n    try {\n      const response = await fetch(\"/current-location\");\n\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n      const data = await response.json();\n\n      if (data.location) {\n        setPosition({ lat: data.location.lat, lng: data.location.lng });\n        setLat(data.location.lat);\n        setLng(data.location.lng);\n      } else {\n        console.error(\"Error fetching current location\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  }, []);\n\n  // マップ読み込み時の処理\n  const handleMapLoad = (map: any) => {\n    console.log(\"Position:\", position);\n\n    console.log(\"Google Map is loaded!\", map);\n  };\n\n  const handleMapClick = (e: any) => {\n    console.log(\"Map clicked at:\", e.latLng.toString());\n  };\n\n  const calculateRoute = async () => {\n    if (!currentLocation || addresses.length === 0) return;\n\n    const waypoints = addresses.map((addr: AddressInfo) => {\n      if (addr.latitude === undefined || addr.longitude === undefined) {\n        // ここでエラーを処理するか、適切なフォールバックを提供する\n      }\n      return {\n        location: new google.maps.LatLng(addr.latitude, addr.longitude),\n        stopover: true,\n      };\n    });\n    \n\n    const directionsServiceOptions = {\n      origin: currentLocation,\n      destination: addresses[addresses.length - 1], // 最後の住所を目的地とする\n      waypoints: waypoints,\n      travelMode: google.maps.TravelMode.DRIVING,\n    };\n\n    const directionsService = new google.maps.DirectionsService();\n    directionsService.route(directionsServiceOptions, (result, status) => {\n      if (status === google.maps.DirectionsStatus.OK && result) {\n        setDirectionsResponse(result);\n      } else {\n        console.error(`error fetching directions ${result}`);\n      }\n    });\n  };\n\n  // DirectionsRenderer コンポーネントの追加\n  const renderDirections = () => {\n    if (directionsResponse) {\n      return (\n        <DirectionsRenderer\n          options={{\n            directions: directionsResponse,\n          }}\n        />\n      );\n    }\n  };\n\n  return (\n    <LoadScript\n      googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY || \"\"}\n    >\n      <Router>\n        <Navbar />\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <div className=\"App-layout\">\n                <div className=\"App-search-container\">\n                  <div className=\"App-input-group\">\n                    <label>住所:</label>\n                    <input\n                      className=\"App-input\"\n                      value={address}\n                      onChange={(e) => setAddress(e.target.value)}\n                    />\n                  </div>\n                  <div className=\"App-input-group\">\n                    <label>郵便番号:</label>\n                    <input\n                      className=\"App-input\"\n                      value={postalCode}\n                      onChange={(e) => setPostalCode(e.target.value)}\n                    />\n                  </div>\n                  <button className=\"App-button\" onClick={getCurrentLocation}>\n                    現在地を取得\n                  </button>\n                  <button className=\"App-button\" onClick={handleSearch}>\n                    検索\n                  </button>\n                  <div className=\"App-coordinates\">\n                    緯度: {lat ? lat.toFixed(6) : \"N/A\"}\n                    <br />\n                    経度: {lng ? lng.toFixed(6) : \"N/A\"}\n                  </div>\n                </div>\n\n                <div className=\"App-map-container\">\n                  <GoogleMap\n                    mapContainerStyle={mapContainerStyle}\n                    center={position}\n                    zoom={13}\n                    onLoad={handleMapLoad}\n                    onClick={handleMapClick}\n                  >\n                    {renderDirections()}\n                  </GoogleMap>\n                </div>\n              </div>\n            }\n          />\n\n          <Route path=\"/user-registration\" element={<UserRegistration />} />\n          <Route path=\"/admin\" element={<AdminPage />} />\n          <Route path=\"/user/profile\" element={<UserProfile />} />\n          <Route path=\"/user/edit\" element={<UserEditForm />} />\n        </Routes>\n      </Router>\n    </LoadScript>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}