{"ast":null,"code":"var _jsxFileName = \"/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/App.tsx\";\n// import React, { useCallback, useState } from \"react\";\n// import {\n//   GoogleMap,\n//   LoadScript,\n// } from \"@react-google-maps/api\";\n// import Navbar from \"./Navbar\";\n// import \"./App.css\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// import UserRegistration from \"./UserRegistration\";\n// import AdminPage from \"./AdminPage\";\n// import UserProfile from \"./UserProfile\";\n// import UserEditForm from \"./UserEditForm\";\n\n// const BASE_URL = process.env.REACT_APP_BACKEND_URL;\n\n// const defaultPosition = {\n//   lat: 35.681236,\n//   lng: 139.767125,\n// };\n\n// function App() {\n//   const mapContainerStyle = {\n//     width: \"100%\",\n//     height: \"400px\",\n//   };\n//   const [address, setAddress] = useState(\"\");\n//   const [postalCode, setPostalCode] = useState(\"\");\n//   const [lat, setLat] = useState<number | null>(null);\n//   const [lng, setLng] = useState<number | null>(null);\n\n//   const [position, setPosition] = useState<\n//     { lat: number; lng: number } | undefined\n//   >(defaultPosition);\n\n//   const handleSearch = async () => {\n//     console.log(\"Sending address:\", address);\n//     try {\n//       const response = await fetch(\n//         `${BASE_URL}/geocode?address=${address || postalCode}`,\n//         {\n//           method: \"GET\", // GETリクエストでバックエンドに送信\n//         }\n//       );\n\n//       if (!response.ok) {\n//         throw new Error(\"Network response was not ok\");\n//       }\n\n//       const data = await response.json();\n\n//       if (data.status === \"OK\") {\n//         const location = data.results[0].geometry.location;\n//         console.log(location);\n//         setPosition({ lat: location.lat, lng: location.lng });\n//         setLat(location.lat);\n//         setLng(location.lng);\n//       } else {\n//         console.error(\"Error fetching coordinates:\", data.status);\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//     }\n//   };\n\n//   const getCurrentLocation = useCallback(async () => {\n//     try {\n//       const response = await fetch(\"/current-location\");\n\n//       if (!response.ok) {\n//         throw new Error(\"Network response was not ok\");\n//       }\n\n//       const data = await response.json();\n\n//       if (data.location) {\n//         setPosition({ lat: data.location.lat, lng: data.location.lng });\n//         setLat(data.location.lat);\n//         setLng(data.location.lng);\n//       } else {\n//         console.error(\"Error fetching current location\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//     }\n//   }, []);\n\n//   // マップ読み込み時の処理\n//   const handleMapLoad = (map: any) => {\n//     console.log(\"Position:\", position);\n\n//     console.log(\"Google Map is loaded!\", map);\n//   };\n\n//   const handleMapClick = (e: any) => {\n//     console.log(\"Map clicked at:\", e.latLng.toString());\n//   };\n\n//   return (\n//     <LoadScript\n//       googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY || \"\"}\n//     >\n//       <Router>\n//         <Navbar />\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               <div className=\"App-layout\">\n//                 <div className=\"App-search-container\">\n//                   <div className=\"App-input-group\">\n//                     <label>住所:</label>\n//                     <input\n//                       className=\"App-input\"\n//                       value={address}\n//                       onChange={(e) => setAddress(e.target.value)}\n//                     />\n//                   </div>\n//                   <div className=\"App-input-group\">\n//                     <label>郵便番号:</label>\n//                     <input\n//                       className=\"App-input\"\n//                       value={postalCode}\n//                       onChange={(e) => setPostalCode(e.target.value)}\n//                     />\n//                   </div>\n//                   <button className=\"App-button\" onClick={getCurrentLocation}>\n//                     現在地を取得\n//                   </button>\n//                   <button className=\"App-button\" onClick={handleSearch}>\n//                     検索\n//                   </button>\n//                   <div className=\"App-coordinates\">\n//                     緯度: {lat ? lat.toFixed(6) : \"N/A\"}\n//                     <br />\n//                     経度: {lng ? lng.toFixed(6) : \"N/A\"}\n//                   </div>\n//                 </div>\n\n//                 <div className=\"App-map-container\">\n//                   <GoogleMap\n//                     mapContainerStyle={mapContainerStyle}\n//                     center={position}\n//                     zoom={13}\n//                     onLoad={handleMapLoad}\n//                     onClick={handleMapClick}\n//                   >\n\n//                   </GoogleMap>\n//                 </div>\n//               </div>\n//             }\n//           />\n\n//           <Route path=\"/user-registration\" element={<UserRegistration />} />\n//           <Route path=\"/admin\" element={<AdminPage />} />\n//           <Route path=\"/user/profile\" element={<UserProfile />} />\n//           <Route path=\"/user/edit\" element={<UserEditForm />} />\n//         </Routes>\n//       </Router>\n//     </LoadScript>\n//   );\n// }\n\n// export default App;\n\nimport React from 'react';\nimport GoogleMapComponent from './GoogleMapComponent';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(GoogleMapComponent, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 178,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 177,\n    columnNumber: 5\n  }, this);\n}\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","GoogleMapComponent","jsxDEV","_jsxDEV","App","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/App.tsx"],"sourcesContent":["// import React, { useCallback, useState } from \"react\";\n// import {\n//   GoogleMap,\n//   LoadScript,\n// } from \"@react-google-maps/api\";\n// import Navbar from \"./Navbar\";\n// import \"./App.css\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n// import UserRegistration from \"./UserRegistration\";\n// import AdminPage from \"./AdminPage\";\n// import UserProfile from \"./UserProfile\";\n// import UserEditForm from \"./UserEditForm\";\n\n\n\n// const BASE_URL = process.env.REACT_APP_BACKEND_URL;\n\n// const defaultPosition = {\n//   lat: 35.681236,\n//   lng: 139.767125,\n// };\n\n// function App() {\n//   const mapContainerStyle = {\n//     width: \"100%\",\n//     height: \"400px\",\n//   };\n//   const [address, setAddress] = useState(\"\");\n//   const [postalCode, setPostalCode] = useState(\"\");\n//   const [lat, setLat] = useState<number | null>(null);\n//   const [lng, setLng] = useState<number | null>(null);\n\n//   const [position, setPosition] = useState<\n//     { lat: number; lng: number } | undefined\n//   >(defaultPosition);\n\n\n\n//   const handleSearch = async () => {\n//     console.log(\"Sending address:\", address);\n//     try {\n//       const response = await fetch(\n//         `${BASE_URL}/geocode?address=${address || postalCode}`,\n//         {\n//           method: \"GET\", // GETリクエストでバックエンドに送信\n//         }\n//       );\n\n//       if (!response.ok) {\n//         throw new Error(\"Network response was not ok\");\n//       }\n\n//       const data = await response.json();\n\n//       if (data.status === \"OK\") {\n//         const location = data.results[0].geometry.location;\n//         console.log(location);\n//         setPosition({ lat: location.lat, lng: location.lng });\n//         setLat(location.lat);\n//         setLng(location.lng);\n//       } else {\n//         console.error(\"Error fetching coordinates:\", data.status);\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//     }\n//   };\n\n//   const getCurrentLocation = useCallback(async () => {\n//     try {\n//       const response = await fetch(\"/current-location\");\n\n//       if (!response.ok) {\n//         throw new Error(\"Network response was not ok\");\n//       }\n\n//       const data = await response.json();\n\n//       if (data.location) {\n//         setPosition({ lat: data.location.lat, lng: data.location.lng });\n//         setLat(data.location.lat);\n//         setLng(data.location.lng);\n//       } else {\n//         console.error(\"Error fetching current location\");\n//       }\n//     } catch (error) {\n//       console.error(\"Error:\", error);\n//     }\n//   }, []);\n\n//   // マップ読み込み時の処理\n//   const handleMapLoad = (map: any) => {\n//     console.log(\"Position:\", position);\n\n//     console.log(\"Google Map is loaded!\", map);\n//   };\n\n//   const handleMapClick = (e: any) => {\n//     console.log(\"Map clicked at:\", e.latLng.toString());\n//   };\n\n\n\n//   return (\n//     <LoadScript\n//       googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY || \"\"}\n//     >\n//       <Router>\n//         <Navbar />\n//         <Routes>\n//           <Route\n//             path=\"/\"\n//             element={\n//               <div className=\"App-layout\">\n//                 <div className=\"App-search-container\">\n//                   <div className=\"App-input-group\">\n//                     <label>住所:</label>\n//                     <input\n//                       className=\"App-input\"\n//                       value={address}\n//                       onChange={(e) => setAddress(e.target.value)}\n//                     />\n//                   </div>\n//                   <div className=\"App-input-group\">\n//                     <label>郵便番号:</label>\n//                     <input\n//                       className=\"App-input\"\n//                       value={postalCode}\n//                       onChange={(e) => setPostalCode(e.target.value)}\n//                     />\n//                   </div>\n//                   <button className=\"App-button\" onClick={getCurrentLocation}>\n//                     現在地を取得\n//                   </button>\n//                   <button className=\"App-button\" onClick={handleSearch}>\n//                     検索\n//                   </button>\n//                   <div className=\"App-coordinates\">\n//                     緯度: {lat ? lat.toFixed(6) : \"N/A\"}\n//                     <br />\n//                     経度: {lng ? lng.toFixed(6) : \"N/A\"}\n//                   </div>\n//                 </div>\n\n//                 <div className=\"App-map-container\">\n//                   <GoogleMap\n//                     mapContainerStyle={mapContainerStyle}\n//                     center={position}\n//                     zoom={13}\n//                     onLoad={handleMapLoad}\n//                     onClick={handleMapClick}\n//                   >\n\n//                   </GoogleMap>\n//                 </div>\n//               </div>\n//             }\n//           />\n\n//           <Route path=\"/user-registration\" element={<UserRegistration />} />\n//           <Route path=\"/admin\" element={<AdminPage />} />\n//           <Route path=\"/user/profile\" element={<UserProfile />} />\n//           <Route path=\"/user/edit\" element={<UserEditForm />} />\n//         </Routes>\n//       </Router>\n//     </LoadScript>\n//   );\n// }\n\n// export default App;\n\nimport React from 'react';\nimport GoogleMapComponent from './GoogleMapComponent';\n\nfunction App() {\n  return (\n    <div>\n      <GoogleMapComponent />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAIA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAOC,kBAAkB,MAAM,sBAAsB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEtD,SAASC,GAAGA,CAAA,EAAG;EACb,oBACED,OAAA;IAAAE,QAAA,eACEF,OAAA,CAACF,kBAAkB;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACnB,CAAC;AAEV;AAACC,EAAA,GANQN,GAAG;AAQZ,eAAeA,GAAG;AAAC,IAAAM,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}