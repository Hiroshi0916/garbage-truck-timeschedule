{"ast":null,"code":"var _jsxFileName = \"/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\nimport Navbar from \"./Navbar\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport UserRegistration from \"./UserRegistration\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: \"100%\",\n  // 地図コンテナを親要素の100%の幅にする\n  height: \"400px\"\n};\nconst BASE_URL = process.env.REACT_APP_BACKEND_URL;\nconst defaultPosition = {\n  lat: 35.681236,\n  lng: 139.767125\n};\nfunction App() {\n  _s();\n  const [address, setAddress] = useState(\"\");\n  const [postalCode, setPostalCode] = useState(\"\");\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n  const [position, setPosition] = useState(defaultPosition);\n  console.log(\"Google Maps API Key:\", process.env.REACT_APP_GOOGLE_MAPS_API_KEY);\n  const handleSearch = async () => {\n    console.log(\"Sending address:\", address);\n    try {\n      // const response = await fetch(`/geocode?address=${address || postalCode}`);\n      const response = await fetch(`${BASE_URL}/geocode?address=${address || postalCode}`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      if (data.status === \"OK\") {\n        const location = data.results[0].geometry.location;\n        console.log(location);\n        setPosition({\n          lat: location.lat,\n          lng: location.lng\n        });\n        setLat(location.lat);\n        setLng(location.lng);\n      } else {\n        console.error(\"Error fetching coordinates:\", data.status);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  // 現在地を取得する関数\n  const getCurrentLocation = useCallback(async () => {\n    try {\n      const response = await fetch(\"/current-location\");\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      if (data.location) {\n        setPosition({\n          lat: data.location.lat,\n          lng: data.location.lng\n        });\n        setLat(data.location.lat);\n        setLng(data.location.lng);\n      } else {\n        console.error(\"Error fetching current location\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  }, []);\n  const handleMapLoad = map => {\n    console.log(\"Position:\", position);\n    console.log(\"Google Map is loaded!\", map);\n  };\n  const handleMapClick = e => {\n    console.log(\"Map clicked at:\", e.latLng.toString());\n  };\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Routes, {\n      children: /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/user-registration\",\n        element: /*#__PURE__*/_jsxDEV(UserRegistration, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 51\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        display: 'flex'\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          width: '30%'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n        googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || \"\",\n        children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n          mapContainerStyle: containerStyle,\n          center: position,\n          zoom: 13,\n          onLoad: handleMapLoad,\n          onClick: handleMapClick,\n          children: position && /*#__PURE__*/_jsxDEV(Marker, {\n            position: position\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 26\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xP5k9TmCcGmnvfG0/LeE48WmMxo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useState","GoogleMap","LoadScript","Marker","Navbar","BrowserRouter","Router","Routes","Route","UserRegistration","jsxDEV","_jsxDEV","containerStyle","width","height","BASE_URL","process","env","REACT_APP_BACKEND_URL","defaultPosition","lat","lng","App","_s","address","setAddress","postalCode","setPostalCode","setLat","setLng","position","setPosition","console","log","REACT_APP_GOOGLE_MAPS_API_KEY","handleSearch","response","fetch","ok","Error","data","json","status","location","results","geometry","error","getCurrentLocation","handleMapLoad","map","handleMapClick","e","latLng","toString","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","style","display","googleMapsApiKey","mapContainerStyle","center","zoom","onLoad","onClick","_c","$RefreshReg$"],"sources":["/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/App.tsx"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\nimport Navbar from \"./Navbar\";\n\nimport {\n  BrowserRouter as Router,\n  Routes,\n  Route\n} from \"react-router-dom\";\nimport UserRegistration from \"./UserRegistration\";\n\nconst containerStyle = {\n  width: \"100%\", // 地図コンテナを親要素の100%の幅にする\n  height: \"400px\",\n};\nconst BASE_URL = process.env.REACT_APP_BACKEND_URL;\nconst defaultPosition = {\n  lat: 35.681236,\n  lng: 139.767125,\n};\n\nfunction App() {\n  const [address, setAddress] = useState(\"\");\n  const [postalCode, setPostalCode] = useState(\"\");\n  const [lat, setLat] = useState<number | null>(null);\n  const [lng, setLng] = useState<number | null>(null);\n\n  const [position, setPosition] = useState<\n    { lat: number; lng: number } | undefined\n  >(defaultPosition);\n\n  console.log(\n    \"Google Maps API Key:\",\n    process.env.REACT_APP_GOOGLE_MAPS_API_KEY\n  );\n\n  const handleSearch = async () => {\n    console.log(\"Sending address:\", address);\n    try {\n      // const response = await fetch(`/geocode?address=${address || postalCode}`);\n      const response = await fetch(\n        `${BASE_URL}/geocode?address=${address || postalCode}`\n      );\n\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n      const data = await response.json();\n\n      if (data.status === \"OK\") {\n        const location = data.results[0].geometry.location;\n        console.log(location);\n        setPosition({ lat: location.lat, lng: location.lng });\n        setLat(location.lat);\n        setLng(location.lng);\n      } else {\n        console.error(\"Error fetching coordinates:\", data.status);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  // 現在地を取得する関数\n  const getCurrentLocation = useCallback(async () => {\n    try {\n      const response = await fetch(\"/current-location\");\n\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n      const data = await response.json();\n\n      if (data.location) {\n        setPosition({ lat: data.location.lat, lng: data.location.lng });\n        setLat(data.location.lat);\n        setLng(data.location.lng);\n      } else {\n        console.error(\"Error fetching current location\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  }, []);\n\n  const handleMapLoad = (map: any) => {\n    console.log(\"Position:\", position);\n\n    console.log(\"Google Map is loaded!\", map);\n  };\n\n  const handleMapClick = (e: any) => {\n    console.log(\"Map clicked at:\", e.latLng.toString());\n  };\n\n  return (\n    <Router>\n      <Navbar />\n      <Routes>\n\n        <Route path=\"/user-registration\" element={<UserRegistration />} />\n        {/* その他のルート */}\n      </Routes>\n\n      {/* 以下はマップ検索機能を表示するコードの例です */}\n      <div style={{ display: 'flex' }}>\n        <div style={{ width: '30%' }}>\n          {/* ... 住所検索フォーム */}\n        </div>\n        <LoadScript googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY || \"\"}>\n          <GoogleMap\n            mapContainerStyle={containerStyle}\n            center={position}\n            zoom={13}\n            onLoad={handleMapLoad}\n            onClick={handleMapClick}\n          >\n            {position && <Marker position={position} />}\n          </GoogleMap>\n        </LoadScript>\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,EAAEC,QAAQ,QAAQ,OAAO;AACpD,SAASC,SAAS,EAAEC,UAAU,EAAEC,MAAM,QAAQ,wBAAwB;AACtE,OAAOC,MAAM,MAAM,UAAU;AAE7B,SACEC,aAAa,IAAIC,MAAM,EACvBC,MAAM,EACNC,KAAK,QACA,kBAAkB;AACzB,OAAOC,gBAAgB,MAAM,oBAAoB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,cAAc,GAAG;EACrBC,KAAK,EAAE,MAAM;EAAE;EACfC,MAAM,EAAE;AACV,CAAC;AACD,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;AAClD,MAAMC,eAAe,GAAG;EACtBC,GAAG,EAAE,SAAS;EACdC,GAAG,EAAE;AACP,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGzB,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAAC0B,UAAU,EAAEC,aAAa,CAAC,GAAG3B,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACoB,GAAG,EAAEQ,MAAM,CAAC,GAAG5B,QAAQ,CAAgB,IAAI,CAAC;EACnD,MAAM,CAACqB,GAAG,EAAEQ,MAAM,CAAC,GAAG7B,QAAQ,CAAgB,IAAI,CAAC;EAEnD,MAAM,CAAC8B,QAAQ,EAAEC,WAAW,CAAC,GAAG/B,QAAQ,CAEtCmB,eAAe,CAAC;EAElBa,OAAO,CAACC,GAAG,CACT,sBAAsB,EACtBjB,OAAO,CAACC,GAAG,CAACiB,6BACd,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC/BH,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAET,OAAO,CAAC;IACxC,IAAI;MACF;MACA,MAAMY,QAAQ,GAAG,MAAMC,KAAK,CACzB,GAAEtB,QAAS,oBAAmBS,OAAO,IAAIE,UAAW,EACvD,CAAC;MAED,IAAI,CAACU,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,MAAM,KAAK,IAAI,EAAE;QACxB,MAAMC,QAAQ,GAAGH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACF,QAAQ;QAClDX,OAAO,CAACC,GAAG,CAACU,QAAQ,CAAC;QACrBZ,WAAW,CAAC;UAAEX,GAAG,EAAEuB,QAAQ,CAACvB,GAAG;UAAEC,GAAG,EAAEsB,QAAQ,CAACtB;QAAI,CAAC,CAAC;QACrDO,MAAM,CAACe,QAAQ,CAACvB,GAAG,CAAC;QACpBS,MAAM,CAACc,QAAQ,CAACtB,GAAG,CAAC;MACtB,CAAC,MAAM;QACLW,OAAO,CAACc,KAAK,CAAC,6BAA6B,EAAEN,IAAI,CAACE,MAAM,CAAC;MAC3D;IACF,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdd,OAAO,CAACc,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;;EAED;EACA,MAAMC,kBAAkB,GAAGhD,WAAW,CAAC,YAAY;IACjD,IAAI;MACF,MAAMqC,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,CAAC;MAEjD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA,MAAMC,IAAI,GAAG,MAAMJ,QAAQ,CAACK,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACG,QAAQ,EAAE;QACjBZ,WAAW,CAAC;UAAEX,GAAG,EAAEoB,IAAI,CAACG,QAAQ,CAACvB,GAAG;UAAEC,GAAG,EAAEmB,IAAI,CAACG,QAAQ,CAACtB;QAAI,CAAC,CAAC;QAC/DO,MAAM,CAACY,IAAI,CAACG,QAAQ,CAACvB,GAAG,CAAC;QACzBS,MAAM,CAACW,IAAI,CAACG,QAAQ,CAACtB,GAAG,CAAC;MAC3B,CAAC,MAAM;QACLW,OAAO,CAACc,KAAK,CAAC,iCAAiC,CAAC;MAClD;IACF,CAAC,CAAC,OAAOA,KAAK,EAAE;MACdd,OAAO,CAACc,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC,EAAE,EAAE,CAAC;EAEN,MAAME,aAAa,GAAIC,GAAQ,IAAK;IAClCjB,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEH,QAAQ,CAAC;IAElCE,OAAO,CAACC,GAAG,CAAC,uBAAuB,EAAEgB,GAAG,CAAC;EAC3C,CAAC;EAED,MAAMC,cAAc,GAAIC,CAAM,IAAK;IACjCnB,OAAO,CAACC,GAAG,CAAC,iBAAiB,EAAEkB,CAAC,CAACC,MAAM,CAACC,QAAQ,CAAC,CAAC,CAAC;EACrD,CAAC;EAED,oBACE1C,OAAA,CAACL,MAAM;IAAAgD,QAAA,gBACL3C,OAAA,CAACP,MAAM;MAAAmD,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC,eACV/C,OAAA,CAACJ,MAAM;MAAA+C,QAAA,eAEL3C,OAAA,CAACH,KAAK;QAACmD,IAAI,EAAC,oBAAoB;QAACC,OAAO,eAAEjD,OAAA,CAACF,gBAAgB;UAAA8C,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE;MAAE;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAE5D,CAAC,eAGT/C,OAAA;MAAKkD,KAAK,EAAE;QAAEC,OAAO,EAAE;MAAO,CAAE;MAAAR,QAAA,gBAC9B3C,OAAA;QAAKkD,KAAK,EAAE;UAAEhD,KAAK,EAAE;QAAM;MAAE;QAAA0C,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAExB,CAAC,eACN/C,OAAA,CAACT,UAAU;QAAC6D,gBAAgB,EAAE/C,OAAO,CAACC,GAAG,CAACiB,6BAA6B,IAAI,EAAG;QAAAoB,QAAA,eAC5E3C,OAAA,CAACV,SAAS;UACR+D,iBAAiB,EAAEpD,cAAe;UAClCqD,MAAM,EAAEnC,QAAS;UACjBoC,IAAI,EAAE,EAAG;UACTC,MAAM,EAAEnB,aAAc;UACtBoB,OAAO,EAAElB,cAAe;UAAAI,QAAA,EAEvBxB,QAAQ,iBAAInB,OAAA,CAACR,MAAM;YAAC2B,QAAQ,EAAEA;UAAS;YAAAyB,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAClC;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACF,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACV,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEb;AAACnC,EAAA,CAxGQD,GAAG;AAAA+C,EAAA,GAAH/C,GAAG;AA0GZ,eAAeA,GAAG;AAAC,IAAA+C,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}