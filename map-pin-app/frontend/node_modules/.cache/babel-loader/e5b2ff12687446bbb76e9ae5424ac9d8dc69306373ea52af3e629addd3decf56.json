{"ast":null,"code":"var _jsxFileName = \"/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/UserRegistration.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./UserRegistration\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserRegistration = () => {\n  _s();\n  const [newUserName, setNewUserName] = useState(\"\");\n  const [newAddress, setNewAddress] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [editingId, setEditingId] = useState(null);\n  const [errors, setErrors] = useState({});\n  const [newUserEmail, setNewUserEmail] = useState(\"\");\n  useEffect(() => {\n    const storedUsers = localStorage.getItem(\"users\");\n    if (storedUsers) {\n      setUsers(JSON.parse(storedUsers));\n    }\n  }, []);\n\n  // ユーザーリストが変更された時にローカルストレージを更新する\n  useEffect(() => {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  }, [users]);\n  const handleRegister = () => {\n    if (validateForm()) {\n      const newUser = {\n        id: Date.now(),\n        userName: newUserName,\n        address: newAddress\n        // Add userEmail to newUser if needed\n      };\n\n      setUsers([...users, newUser]);\n      // Clear the form fields\n      setNewUserName(\"\");\n      setNewAddress(\"\");\n      setNewUserEmail(\"\"); // Clear userEmail if state hook is added\n      setErrors({});\n    }\n  };\n  const handleRegisterOrSave = () => {\n    // 編集モードであるか新規登録モードであるかを判定し、\n    // 対応する処理を行います。\n    if (editingId === null) {\n      // 新規登録処理\n      if (validateForm()) {\n        const newUser = {\n          id: Date.now(),\n          // 本番環境ではもっと信頼性の高いID生成方法を使用してください\n          userName: newUserName,\n          address: newAddress,\n          email: newUserEmail // 新しいメールアドレスも登録する\n        };\n\n        setUsers([...users, newUser]);\n        resetForm();\n      }\n    } else {\n      // 編集保存処理\n      handleSave();\n    }\n  };\n\n  // フォームをリセットする関数を作成します。\n  const resetForm = () => {\n    setNewUserName(\"\");\n    setNewAddress(\"\");\n    setNewUserEmail(\"\");\n    setEditingId(null);\n    setErrors({});\n  };\n  const handleSave = () => {\n    if (editingId !== null && validateForm()) {\n      setUsers(users.map(user => {\n        if (user.id === editingId) {\n          return {\n            ...user,\n            userName: newUserName,\n            address: newAddress,\n            email: newUserEmail // Set isEditing flag to false after saving\n          };\n        }\n\n        return user;\n      }));\n      // Reset the form and editing state\n      setEditingId(null);\n      setNewUserName(\"\");\n      setNewAddress(\"\");\n      // setNewUserEmail(\"\");\n      setErrors({});\n    }\n  };\n  const handleEdit = id => {\n    const user = users.find(u => u.id === id);\n    if (user) {\n      setEditingId(id);\n      setNewUserName(user.userName);\n      setNewAddress(user.address);\n      // Set the email if you're using it\n      // setNewUserEmail(user.email);\n      // Set isEditing flag to true for the editing user\n      setUsers(users.map(u => u.id === id ? {\n        ...u,\n        isEditing: true\n      } : u));\n    }\n  };\n  const validateForm = () => {\n    let formIsValid = true;\n    let tempErrors = {};\n    if (!newUserName.trim()) {\n      formIsValid = false;\n      tempErrors.userName = \"ユーザー名を入力してください。\";\n    }\n    if (!newAddress.trim()) {\n      formIsValid = false;\n      tempErrors[\"address\"] = \"住所を入力してください。\";\n    }\n    setErrors(tempErrors); // Update the errors state\n    return formIsValid;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegisterOrSave,\n        children: editingId === null ? '登録' : '保存'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-list-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"user-list-table\",\n        children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n          children: /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u540D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u30A2\\u30C9\\u30EC\\u30B9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u5C45\\u4F4F\\u5730\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u64CD\\u4F5C\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.email\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: user.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"button\", {\n                onClick: () => handleEdit(user.id),\n                children: \"\\u7DE8\\u96C6\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)]\n          }, user.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 5\n  }, this);\n};\n_s(UserRegistration, \"vI7G9moHBJKAaxxUws+3PyW6OSw=\");\n_c = UserRegistration;\nexport default UserRegistration;\nvar _c;\n$RefreshReg$(_c, \"UserRegistration\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","UserRegistration","_s","newUserName","setNewUserName","newAddress","setNewAddress","users","setUsers","editingId","setEditingId","errors","setErrors","newUserEmail","setNewUserEmail","storedUsers","localStorage","getItem","JSON","parse","setItem","stringify","handleRegister","validateForm","newUser","id","Date","now","userName","address","handleRegisterOrSave","email","resetForm","handleSave","map","user","handleEdit","find","u","isEditing","formIsValid","tempErrors","trim","children","className","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/UserRegistration.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./UserRegistration\";\n\ninterface Errors {\n  userName?: string;\n  postalCode?: string;\n  address?: string;\n  email?: string;\n}\n\ninterface User {\n  id: number;\n  userName: string;\n  postalCode?: string;\n  address: string;\n  email?: string;\n  isEditing?: boolean;\n}\n\nconst UserRegistration = () => {\n  const [newUserName, setNewUserName] = useState<string>(\"\");\n  const [newAddress, setNewAddress] = useState<string>(\"\");\n  const [users, setUsers] = useState<User[]>([]);\n  const [editingId, setEditingId] = useState<number | null>(null);\n  const [errors, setErrors] = useState<Errors>({});\n\n  const [newUserEmail, setNewUserEmail] = useState<string>(\"\");\n\n  useEffect(() => {\n    const storedUsers = localStorage.getItem(\"users\");\n    if (storedUsers) {\n      setUsers(JSON.parse(storedUsers));\n    }\n  }, []);\n\n  // ユーザーリストが変更された時にローカルストレージを更新する\n  useEffect(() => {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  }, [users]);\n\n  const handleRegister = () => {\n    if (validateForm()) {\n      const newUser: User = {\n        id: Date.now(),\n        userName: newUserName,\n        address: newAddress,\n        // Add userEmail to newUser if needed\n      };\n      setUsers([...users, newUser]);\n      // Clear the form fields\n      setNewUserName(\"\");\n      setNewAddress(\"\");\n      setNewUserEmail(\"\"); // Clear userEmail if state hook is added\n      setErrors({});\n    }\n  };\n\n  const handleRegisterOrSave = () => {\n    // 編集モードであるか新規登録モードであるかを判定し、\n    // 対応する処理を行います。\n    if (editingId === null) {\n      // 新規登録処理\n      if (validateForm()) {\n        const newUser: User = {\n          id: Date.now(), // 本番環境ではもっと信頼性の高いID生成方法を使用してください\n          userName: newUserName,\n          address: newAddress,\n          email: newUserEmail, // 新しいメールアドレスも登録する\n        };\n        setUsers([...users, newUser]);\n        resetForm();\n      }\n    } else {\n      // 編集保存処理\n      handleSave();\n    }\n  };\n\n  // フォームをリセットする関数を作成します。\n  const resetForm = () => {\n    setNewUserName(\"\");\n    setNewAddress(\"\");\n    setNewUserEmail(\"\");\n    setEditingId(null);\n    setErrors({});\n  };\n\n  const handleSave = () => {\n    if (editingId !== null && validateForm()) {\n      setUsers(\n        users.map((user) => {\n          if (user.id === editingId) {\n            return {\n              ...user,\n              userName: newUserName,\n              address: newAddress,\n              email: newUserEmail, // Set isEditing flag to false after saving\n            };\n          }\n          return user;\n        })\n      );\n      // Reset the form and editing state\n      setEditingId(null);\n      setNewUserName(\"\");\n      setNewAddress(\"\");\n      // setNewUserEmail(\"\");\n      setErrors({});\n    }\n  };\n\n  const handleEdit = (id: number) => {\n    const user = users.find((u) => u.id === id);\n    if (user) {\n      setEditingId(id);\n      setNewUserName(user.userName);\n      setNewAddress(user.address);\n      // Set the email if you're using it\n      // setNewUserEmail(user.email);\n      // Set isEditing flag to true for the editing user\n      setUsers(users.map((u) => (u.id === id ? { ...u, isEditing: true } : u)));\n    }\n  };\n\n  const validateForm = () => {\n    let formIsValid = true;\n    let tempErrors: Errors = {};\n\n    if (!newUserName.trim()) {\n      formIsValid = false;\n      tempErrors.userName = \"ユーザー名を入力してください。\";\n    }\n    if (!newAddress.trim()) {\n      formIsValid = false;\n      tempErrors[\"address\"] = \"住所を入力してください。\";\n    }\n\n    setErrors(tempErrors); // Update the errors state\n    return formIsValid;\n  };\n\n  return (\n    <div>\n      {/* ユーザー情報入力フォーム */}\n      <div className=\"table-container\">\n        <table className=\"table\">\n          {/* ... フォーム入力フィールド */}\n        </table>\n        {/* 保存ボタン: 新規登録または編集保存のいずれかの処理を実行 */}\n        <button onClick={handleRegisterOrSave}>\n          {editingId === null ? '登録' : '保存'}\n        </button>\n      </div>\n      \n      {/* ユーザー情報表示セクション */}\n      <div className=\"user-list-container\">\n        <table className=\"user-list-table\">\n          <thead>\n            <tr>\n              <th>ユーザー名</th>\n              <th>ユーザーアドレス</th>\n              <th>居住地</th>\n              <th>操作</th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user.id}>\n                <td>{user.userName}</td>\n                <td>{user.email}</td>\n                <td>{user.address}</td>\n                <td>\n                  {/* 編集ボタン */}\n                  <button onClick={() => handleEdit(user.id)}>編集</button>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n};\n\nexport default UserRegistration;"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}