{"ast":null,"code":"var _jsxFileName = \"/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/AdminPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport GoogleMapDisplay from \"./GoogleMapDisplay\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [addresses, setAddresses] = useState(JSON.parse(localStorage.getItem(\"addresses\") || \"[]\"));\n  const [currentAddress, setCurrentAddress] = useState(\"\");\n  const [currentOrder, setCurrentOrder] = useState(\"\");\n  useEffect(() => {\n    // アドレスリストが更新されたらローカルストレージに保存する\n    localStorage.setItem(\"addresses\", JSON.stringify(addresses));\n  }, [addresses]);\n  const addAddress = () => {\n    const order = parseInt(currentOrder);\n    if (currentAddress.trim() !== \"\" && !isNaN(order)) {\n      // 既存の順番を更新\n      const updatedAddresses = addresses.map(addr => ({\n        ...addr,\n        order: addr.order >= order ? addr.order + 1 : addr.order\n      }));\n\n      // 新しいアドレス情報を追加\n      updatedAddresses.push({\n        address: currentAddress,\n        // 緯度と経度はAPIから取得\n        order\n      });\n\n      // 順番に従ってソート\n      updatedAddresses.sort((a, b) => a.order - b.order);\n      setAddresses(updatedAddresses);\n      setCurrentAddress(\"\");\n      setCurrentOrder(\"\");\n\n      // ローカルストレージに保存\n      localStorage.setItem(\"addresses\", JSON.stringify(updatedAddresses));\n    }\n  };\n\n  // 住所リストを表形式で表示する関数\n  const renderAddressTable = () => {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u767B\\u9332\\u4F4F\\u6240\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u7DEF\\u5EA6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u7D4C\\u5EA6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: addresses.map(info => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: info.order\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: info.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: info.latitude || \"未設定\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: info.longitude || \"未設定\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this)]\n        }, info.order, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: currentOrder,\n      onChange: e => setCurrentOrder(e.target.value),\n      placeholder: \"\\u9806\\u756A\\u3092\\u5165\\u529B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: currentAddress,\n      onChange: e => setCurrentAddress(e.target.value),\n      placeholder: \"\\u4F4F\\u6240\\u3092\\u5165\\u529B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addAddress,\n      children: \"\\u4F4F\\u6240\\u3092\\u8FFD\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), renderAddressTable(), /*#__PURE__*/_jsxDEV(GoogleMapDisplay, {\n      addresses: addresses.map(info => info.address)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"zCgK7yaASQz0GvHJmced7Deb23E=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMapDisplay","jsxDEV","_jsxDEV","AdminPage","_s","addresses","setAddresses","JSON","parse","localStorage","getItem","currentAddress","setCurrentAddress","currentOrder","setCurrentOrder","setItem","stringify","addAddress","order","parseInt","trim","isNaN","updatedAddresses","map","addr","push","address","sort","a","b","renderAddressTable","children","fileName","_jsxFileName","lineNumber","columnNumber","info","latitude","longitude","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/AdminPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport GoogleMapDisplay from \"./GoogleMapDisplay\";\n\ntype AddressInfo = {\n  address: string;\n  latitude?: number;\n  longitude?: number;\n  order: number;\n};\n\nconst AdminPage = () => {\n  const [addresses, setAddresses] = useState<AddressInfo[]>(\n    JSON.parse(localStorage.getItem(\"addresses\") || \"[]\")\n  );\n  const [currentAddress, setCurrentAddress] = useState(\"\");\n  const [currentOrder, setCurrentOrder] = useState(\"\");\n\n  useEffect(() => {\n    // アドレスリストが更新されたらローカルストレージに保存する\n    localStorage.setItem(\"addresses\", JSON.stringify(addresses));\n  }, [addresses]);\n\n  const addAddress = () => {\n    const order = parseInt(currentOrder);\n    if (currentAddress.trim() !== \"\" && !isNaN(order)) {\n      // 既存の順番を更新\n      const updatedAddresses = addresses.map((addr) => ({\n        ...addr,\n        order: addr.order >= order ? addr.order + 1 : addr.order,\n      }));\n\n      // 新しいアドレス情報を追加\n      updatedAddresses.push({\n        address: currentAddress,\n        // 緯度と経度はAPIから取得\n        order,\n      });\n\n      // 順番に従ってソート\n      updatedAddresses.sort((a, b) => a.order - b.order);\n\n      setAddresses(updatedAddresses);\n      setCurrentAddress(\"\");\n      setCurrentOrder(\"\");\n\n      // ローカルストレージに保存\n      localStorage.setItem(\"addresses\", JSON.stringify(updatedAddresses));\n    }\n  };\n\n  // 住所リストを表形式で表示する関数\n  const renderAddressTable = () => {\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th>登録住所</th>\n            <th>緯度</th>\n            <th>経度</th>\n          </tr>\n        </thead>\n        <tbody>\n          {addresses.map((info) => (\n            <tr key={info.order}>\n              <td>{info.order}</td>\n              <td>{info.address}</td>\n              <td>{info.latitude || \"未設定\"}</td>\n              <td>{info.longitude || \"未設定\"}</td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  };\n\n  return (\n    <div>\n      <input\n        type=\"number\"\n        value={currentOrder}\n        onChange={(e) => setCurrentOrder(e.target.value)}\n        placeholder=\"順番を入力\"\n      />\n      <input\n        type=\"text\"\n        value={currentAddress}\n        onChange={(e) => setCurrentAddress(e.target.value)}\n        placeholder=\"住所を入力\"\n      />\n      <button onClick={addAddress}>住所を追加</button>\n      {renderAddressTable()}\n      <GoogleMapDisplay addresses={addresses.map((info) => info.address)} />\n    </div>\n  );\n};\n\nexport default AdminPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}