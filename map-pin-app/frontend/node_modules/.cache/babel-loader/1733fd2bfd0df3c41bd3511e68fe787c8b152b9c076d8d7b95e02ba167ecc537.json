{"ast":null,"code":"var _jsxFileName = \"/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/UserRegistration.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./UserRegistration\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserRegistration = () => {\n  _s();\n  const [newUserName, setNewUserName] = useState(\"\");\n  const [newAddress, setNewAddress] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [editingId, setEditingId] = useState(null);\n  const [errors, setErrors] = useState({});\n  const [newUserEmail, setNewUserEmail] = useState(\"\");\n  useEffect(() => {\n    const storedUsers = localStorage.getItem(\"users\");\n    if (storedUsers) {\n      setUsers(JSON.parse(storedUsers));\n    }\n  }, []);\n\n  // ユーザーリストが変更された時にローカルストレージを更新する\n  useEffect(() => {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  }, [users]);\n  const handleRegister = () => {\n    if (validateForm()) {\n      const newUser = {\n        id: Date.now(),\n        userName: newUserName,\n        address: newAddress\n        // Add userEmail to newUser if needed\n      };\n\n      setUsers([...users, newUser]);\n      // Clear the form fields\n      setNewUserName('');\n      setNewAddress('');\n      setNewUserEmail(''); // Clear userEmail if state hook is added\n      setErrors({});\n    }\n  };\n  const handleSubmit = event => {\n    event.preventDefault(); // Prevent the default form submit behavior\n    if (validateForm()) {\n      handleRegister();\n    }\n  };\n  const handleEdit = id => {\n    const user = users.find(user => user.id === id);\n    if (user) {\n      setEditingId(id);\n      setNewUserName(user.userName);\n      setNewAddress(user.address);\n    }\n  };\n  const handleSave = id => {\n    setUsers(users.map(user => user.id === id ? {\n      ...user,\n      userName: newUserName,\n      address: newAddress\n    } : user));\n    setEditingId(null);\n    setNewUserName(\"\");\n    setNewAddress(\"\");\n  };\n  const validateForm = () => {\n    let formIsValid = true;\n    let tempErrors = {};\n    if (!newUserName.trim()) {\n      formIsValid = false;\n      tempErrors.userName = \"ユーザー名を入力してください。\";\n    }\n    if (!newAddress.trim()) {\n      formIsValid = false;\n      tempErrors[\"address\"] = \"住所を入力してください。\";\n    }\n    setErrors(tempErrors); // Update the errors state\n    return formIsValid;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"table-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"table\", {\n      className: \"table\",\n      children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u540D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newUserName,\n              onChange: e => setNewUserName(e.target.value),\n              placeholder: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u540D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this), errors.userName && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: errors.userName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 35\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u30A2\\u30C9\\u30EC\\u30B9\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\"\n              // Update the state accordingly if you have a newUserEmail state\n              ,\n              placeholder: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u30A2\\u30C9\\u30EC\\u30B9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u5C45\\u4F4F\\u5730\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: newAddress,\n              onChange: e => setNewAddress(e.target.value),\n              placeholder: \"\\u5C45\\u4F4F\\u5730\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), errors.address && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"error\",\n              children: errors.address\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 34\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleRegister,\n        children: \"\\u767B\\u9332\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {/* Implement the onClick event for edit */}\n        // disabled={editingId === null} // If you want to disable the edit button when no user is selected for editing\n        ,\n        children: \"\\u7DE8\\u96C6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 144,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n};\n_s(UserRegistration, \"vI7G9moHBJKAaxxUws+3PyW6OSw=\");\n_c = UserRegistration;\nexport default UserRegistration;\nvar _c;\n$RefreshReg$(_c, \"UserRegistration\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","UserRegistration","_s","newUserName","setNewUserName","newAddress","setNewAddress","users","setUsers","editingId","setEditingId","errors","setErrors","newUserEmail","setNewUserEmail","storedUsers","localStorage","getItem","JSON","parse","setItem","stringify","handleRegister","validateForm","newUser","id","Date","now","userName","address","handleSubmit","event","preventDefault","handleEdit","user","find","handleSave","map","formIsValid","tempErrors","trim","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/UserRegistration.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./UserRegistration\";\n\ninterface Errors {\n  userName?: string;\n  postalCode?: string;\n  address?: string;\n}\n\ninterface User {\n  id: number;\n  userName: string;\n  postalCode?: string;  // Make postalCode optional\n  address: string;\n  isEditing?: boolean;  // Make isEditing optional\n}\n\n\nconst UserRegistration = () => {\n  const [newUserName, setNewUserName] = useState<string>(\"\");\n  const [newAddress, setNewAddress] = useState<string>(\"\");\n  const [users, setUsers] = useState<User[]>([]);\n  const [editingId, setEditingId] = useState<number | null>(null);\n  const [errors, setErrors] = useState<Errors>({});\n\n  const [newUserEmail, setNewUserEmail] = useState<string>(\"\");\n\n  useEffect(() => {\n    const storedUsers = localStorage.getItem(\"users\");\n    if (storedUsers) {\n      setUsers(JSON.parse(storedUsers));\n    }\n  }, []);\n\n  // ユーザーリストが変更された時にローカルストレージを更新する\n  useEffect(() => {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  }, [users]);\n\n  const handleRegister = () => {\n    if (validateForm()) {\n      const newUser: User = {\n        id: Date.now(),\n        userName: newUserName,\n        address: newAddress,\n        // Add userEmail to newUser if needed\n      };\n      setUsers([...users, newUser]);\n      // Clear the form fields\n      setNewUserName('');\n      setNewAddress('');\n      setNewUserEmail(''); // Clear userEmail if state hook is added\n      setErrors({});\n    }\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault(); // Prevent the default form submit behavior\n    if (validateForm()) {\n      handleRegister();\n    }\n  };\n\n  const handleEdit = (id: number) => {\n    const user = users.find((user) => user.id === id);\n    if (user) {\n      setEditingId(id);\n      setNewUserName(user.userName);\n      setNewAddress(user.address);\n    }\n  };\n\n  const handleSave = (id: number) => {\n    setUsers(\n      users.map((user) =>\n        user.id === id\n          ? { ...user, userName: newUserName, address: newAddress }\n          : user\n      )\n    );\n    setEditingId(null);\n    setNewUserName(\"\");\n    setNewAddress(\"\");\n  };\n\n  const validateForm = () => {\n    let formIsValid = true;\n    let tempErrors: Errors = {};\n\n    if (!newUserName.trim()) {\n      formIsValid = false;\n      tempErrors.userName = \"ユーザー名を入力してください。\";\n    }\n    if (!newAddress.trim()) {\n      formIsValid = false;\n      tempErrors[\"address\"] = \"住所を入力してください。\";\n    }\n\n    setErrors(tempErrors); // Update the errors state\n    return formIsValid;\n  };\n\n  return (\n    <div className=\"table-container\">\n    <table className=\"table\">\n        <tbody>\n          <tr>\n            <th>ユーザー名</th>\n            <td>\n              <input\n                type=\"text\"\n                value={newUserName}\n                onChange={(e) => setNewUserName(e.target.value)}\n                placeholder=\"ユーザー名\"\n              />\n              {errors.userName && <div className=\"error\">{errors.userName}</div>}\n            </td>\n          </tr>\n          <tr>\n            <th>ユーザーアドレス</th>\n            <td>\n              <input\n                type=\"text\"\n                // Update the state accordingly if you have a newUserEmail state\n                placeholder=\"ユーザーアドレス\"\n              />\n              {/* Implement error display for newUserEmail if applicable */}\n            </td>\n          </tr>\n          <tr>\n            <th>居住地</th>\n            <td>\n              <input\n                type=\"text\"\n                value={newAddress}\n                onChange={(e) => setNewAddress(e.target.value)}\n                placeholder=\"居住地\"\n              />\n              {errors.address && <div className=\"error\">{errors.address}</div>}\n            </td>\n          </tr>\n        </tbody>\n      </table>\n      <div className=\"button-container\">\n        <button onClick={handleRegister}>登録</button>\n        <button\n          onClick={() => {/* Implement the onClick event for edit */}}\n          // disabled={editingId === null} // If you want to disable the edit button when no user is selected for editing\n        >\n          編集\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default UserRegistration;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}