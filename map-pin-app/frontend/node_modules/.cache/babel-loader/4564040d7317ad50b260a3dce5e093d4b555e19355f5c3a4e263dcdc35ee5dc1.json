{"ast":null,"code":"var _jsxFileName = \"/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/AdminPage.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport GoogleMapDisplay from \"./GoogleMapDisplay\";\n// CSSモジュールをインポート\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AdminPage = () => {\n  _s();\n  const [addresses, setAddresses] = useState(JSON.parse(localStorage.getItem(\"addresses\") || \"[]\"));\n  const [currentAddress, setCurrentAddress] = useState(\"\");\n  const [currentPostalCode, setCurrentPostalCode] = useState(\"\");\n  const [currentOrder, setCurrentOrder] = useState(\"\");\n  useEffect(() => {\n    // アドレスリストが更新されたらローカルストレージに保存する\n    localStorage.setItem(\"addresses\", JSON.stringify(addresses));\n  }, [addresses]);\n  const addAddress = () => {\n    const order = parseInt(currentOrder);\n    if (currentAddress.trim() !== \"\" && !isNaN(order)) {\n      // 既存の順番を更新\n      const updatedAddresses = addresses.map(addr => ({\n        ...addr,\n        order: addr.order >= order ? addr.order + 1 : addr.order\n      }));\n\n      // 新しいアドレス情報を追加\n      updatedAddresses.push({\n        address: currentAddress,\n        postalCode: currentPostalCode,\n        order\n      });\n\n      // 順番に従ってソート\n      updatedAddresses.sort((a, b) => a.order - b.order);\n      setAddresses(updatedAddresses);\n      setCurrentAddress(\"\");\n      setCurrentOrder(\"\");\n\n      // ローカルストレージに保存\n      localStorage.setItem(\"addresses\", JSON.stringify(updatedAddresses));\n    }\n  };\n  const removeAddress = orderToRemove => {\n    // 順番に基づいてアドレスを削除し、それ以降のアドレスの順番をデクリメントする\n    const updatedAddresses = addresses.filter(addr => addr.order !== orderToRemove).map(addr => ({\n      ...addr,\n      order: addr.order > orderToRemove ? addr.order - 1 : addr.order\n    }));\n    setAddresses(updatedAddresses);\n\n    // ローカルストレージを更新\n    localStorage.setItem(\"addresses\", JSON.stringify(updatedAddresses));\n  };\n\n  // 住所リストを表形式で表示する関数\n  const renderAddressTable = () => {\n    return /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u9806\\u756A\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u90F5\\u4FBF\\u756A\\u53F7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u767B\\u9332\\u4F4F\\u6240\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u7DEF\\u5EA6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u7D4C\\u5EA6\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u64CD\\u4F5C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: addresses.map(info => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: info.order\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: info.postalCode || \"未設定\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 15\n          }, this), \" \", /*#__PURE__*/_jsxDEV(\"td\", {\n            children: info.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: info.latitude || \"未設定\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: info.longitude || \"未設定\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => removeAddress(info.order),\n              children: \"\\u524A\\u9664\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, this)]\n        }, info.order, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"number\",\n      value: currentOrder,\n      onChange: e => setCurrentOrder(e.target.value),\n      placeholder: \"\\u9806\\u756A\\u3092\\u5165\\u529B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: currentPostalCode,\n      onChange: e => setCurrentPostalCode(e.target.value),\n      placeholder: \"\\u90F5\\u4FBF\\u756A\\u53F7\\u3092\\u5165\\u529B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: currentAddress,\n      onChange: e => setCurrentAddress(e.target.value),\n      placeholder: \"\\u4F4F\\u6240\\u3092\\u5165\\u529B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: addAddress,\n      children: \"\\u4F4F\\u6240\\u3092\\u8FFD\\u52A0\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), renderAddressTable(), /*#__PURE__*/_jsxDEV(GoogleMapDisplay, {\n      addresses: addresses.map(info => info.address)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(AdminPage, \"1FAhNVnkGXxmFF6MdlQNxKQWdJU=\");\n_c = AdminPage;\nexport default AdminPage;\nvar _c;\n$RefreshReg$(_c, \"AdminPage\");","map":{"version":3,"names":["React","useEffect","useState","GoogleMapDisplay","jsxDEV","_jsxDEV","AdminPage","_s","addresses","setAddresses","JSON","parse","localStorage","getItem","currentAddress","setCurrentAddress","currentPostalCode","setCurrentPostalCode","currentOrder","setCurrentOrder","setItem","stringify","addAddress","order","parseInt","trim","isNaN","updatedAddresses","map","addr","push","address","postalCode","sort","a","b","removeAddress","orderToRemove","filter","renderAddressTable","children","fileName","_jsxFileName","lineNumber","columnNumber","info","latitude","longitude","onClick","type","value","onChange","e","target","placeholder","_c","$RefreshReg$"],"sources":["/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/AdminPage.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport GoogleMapDisplay from \"./GoogleMapDisplay\";\nimport styles from './AdminPage.css'; // CSSモジュールをインポート\n\ntype AddressInfo = {\n  address: string;\n  postalCode?: string;\n  latitude?: number;\n  longitude?: number;\n  order: number;\n};\n\nconst AdminPage = () => {\n  const [addresses, setAddresses] = useState<AddressInfo[]>(\n    JSON.parse(localStorage.getItem(\"addresses\") || \"[]\")\n  );\n  const [currentAddress, setCurrentAddress] = useState(\"\");\n  const [currentPostalCode, setCurrentPostalCode] = useState(\"\");\n  const [currentOrder, setCurrentOrder] = useState(\"\");\n\n  useEffect(() => {\n    // アドレスリストが更新されたらローカルストレージに保存する\n    localStorage.setItem(\"addresses\", JSON.stringify(addresses));\n  }, [addresses]);\n\n  const addAddress = () => {\n    const order = parseInt(currentOrder);\n    if (currentAddress.trim() !== \"\" && !isNaN(order)) {\n      // 既存の順番を更新\n      const updatedAddresses = addresses.map((addr) => ({\n        ...addr,\n        order: addr.order >= order ? addr.order + 1 : addr.order,\n      }));\n\n      // 新しいアドレス情報を追加\n      updatedAddresses.push({\n        address: currentAddress,\n        postalCode: currentPostalCode,\n        order,\n      });\n\n      // 順番に従ってソート\n      updatedAddresses.sort((a, b) => a.order - b.order);\n\n      setAddresses(updatedAddresses);\n      setCurrentAddress(\"\");\n      setCurrentOrder(\"\");\n\n      // ローカルストレージに保存\n      localStorage.setItem(\"addresses\", JSON.stringify(updatedAddresses));\n    }\n  };\n\n  const removeAddress = (orderToRemove: number) => {\n    // 順番に基づいてアドレスを削除し、それ以降のアドレスの順番をデクリメントする\n    const updatedAddresses = addresses\n      .filter((addr) => addr.order !== orderToRemove)\n      .map((addr) => ({\n        ...addr,\n        order: addr.order > orderToRemove ? addr.order - 1 : addr.order,\n      }));\n\n    setAddresses(updatedAddresses);\n\n    // ローカルストレージを更新\n    localStorage.setItem(\"addresses\", JSON.stringify(updatedAddresses));\n  };\n\n  // 住所リストを表形式で表示する関数\n  const renderAddressTable = () => {\n    return (\n      <table>\n        <thead>\n          <tr>\n            <th>順番</th>\n            <th>郵便番号</th>\n            <th>登録住所</th>\n            <th>緯度</th>\n            <th>経度</th>\n            <th>操作</th>\n          </tr>\n        </thead>\n        <tbody>\n          {addresses.map((info) => (\n            <tr key={info.order}>\n              <td>{info.order}</td>\n              <td>{info.postalCode || \"未設定\"}</td>{\" \"}\n              {/* 郵便番号のデータを表示 */}\n              <td>{info.address}</td>\n              <td>{info.latitude || \"未設定\"}</td>\n              <td>{info.longitude || \"未設定\"}</td>\n              <td>\n                <button onClick={() => removeAddress(info.order)}>削除</button>\n              </td>\n            </tr>\n          ))}\n        </tbody>\n      </table>\n    );\n  };\n\n  return (\n    <div>\n      <input\n        type=\"number\"\n        value={currentOrder}\n        onChange={(e) => setCurrentOrder(e.target.value)}\n        placeholder=\"順番を入力\"\n      />\n      <input\n        type=\"text\"\n        value={currentPostalCode}\n        onChange={(e) => setCurrentPostalCode(e.target.value)}\n        placeholder=\"郵便番号を入力\"\n      />\n      <input\n        type=\"text\"\n        value={currentAddress}\n        onChange={(e) => setCurrentAddress(e.target.value)}\n        placeholder=\"住所を入力\"\n      />\n      <button onClick={addAddress}>住所を追加</button>\n      {renderAddressTable()}\n      <GoogleMapDisplay addresses={addresses.map((info) => info.address)} />\n    </div>\n  );\n};\n\nexport default AdminPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}