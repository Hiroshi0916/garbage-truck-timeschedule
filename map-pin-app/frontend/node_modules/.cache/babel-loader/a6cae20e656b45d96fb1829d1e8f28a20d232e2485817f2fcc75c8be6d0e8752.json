{"ast":null,"code":"var _jsxFileName = \"/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/UserRegistration.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./UserRegistration\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserRegistration = () => {\n  _s();\n  const [userName, setUserName] = useState(\"\");\n  const [postalCode, setPostalCode] = useState(\"\");\n  const [address, setAddress] = useState(\"\");\n  const [errors, setErrors] = useState({});\n  const [users, setUsers] = useState([]); // ユーザーリストの状態\n  const [editingId, setEditingId] = useState(null);\n\n  // コンポーネントがマウントされた時にローカルストレージからデータを読み込む\n  useEffect(() => {\n    const storedUsers = localStorage.getItem(\"users\");\n    if (storedUsers) {\n      setUsers(JSON.parse(storedUsers));\n    }\n  }, []);\n\n  // ユーザーリストが変更された時にローカルストレージを更新する\n  useEffect(() => {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  }, [users]);\n  const validateForm = () => {\n    let formIsValid = true;\n    let tempErrors = {};\n    if (!userName.trim()) {\n      formIsValid = false;\n      tempErrors.userName = \"ユーザー名を入力してください。\";\n    }\n    if (!postalCode.trim()) {\n      formIsValid = false;\n      tempErrors.postalCode = \"郵便番号を入力してください。\";\n    }\n    if (!address.trim()) {\n      formIsValid = false;\n      tempErrors[\"address\"] = \"住所を入力してください。\";\n    }\n    setErrors(tempErrors);\n    return formIsValid;\n  };\n  const handleEdit = id => {\n    setEditingId(id);\n    const user = users.find(user => user.id === id);\n    if (user) {\n      setUserName(user.userName);\n      setPostalCode(user.postalCode);\n      setAddress(user.address);\n    }\n  };\n  const handleSave = id => {\n    setUsers(users.map(user => user.id === id ? {\n      ...user,\n      userName,\n      postalCode,\n      address,\n      isEditing: false\n    } : user));\n    resetForm();\n  };\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (editingId !== null) {\n      handleSave(editingId);\n    } else {\n      if (validateForm()) {\n        const newUser = {\n          id: Date.now(),\n          // ユニークなIDを生成\n          userName,\n          postalCode,\n          address,\n          isEditing: false\n        };\n        setUsers([...users, newUser]);\n        resetForm();\n      }\n    }\n  };\n  const resetForm = () => {\n    setUserName(\"\");\n    setPostalCode(\"\");\n    setAddress(\"\");\n    setEditingId(null);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: editingId !== null ? \"保存\" : \"登録\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), users.length > 0 && /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u540D\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u90F5\\u4FBF\\u756A\\u53F7\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u4F4F\\u6240\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n            children: \"\\u64CD\\u4F5C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: users.map(user => /*#__PURE__*/_jsxDEV(\"tr\", {\n          children: [/*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: userName,\n              onChange: e => setUserName(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 21\n            }, this) : user.userName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: postalCode,\n              onChange: e => setPostalCode(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 140,\n              columnNumber: 21\n            }, this) : user.postalCode\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.isEditing ? /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: address,\n              onChange: e => setAddress(e.target.value)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 21\n            }, this) : user.address\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 149,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n            children: user.isEditing ? /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleSave(user.id),\n              children: \"\\u4FDD\\u5B58\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 21\n            }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n              onClick: () => handleEdit(user.id),\n              children: \"\\u7DE8\\u96C6\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, this)]\n        }, user.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n};\n_s(UserRegistration, \"thbzWKuy+/CKG1OLXBUU3V1/v7Y=\");\n_c = UserRegistration;\nexport default UserRegistration;\nvar _c;\n$RefreshReg$(_c, \"UserRegistration\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","UserRegistration","_s","userName","setUserName","postalCode","setPostalCode","address","setAddress","errors","setErrors","users","setUsers","editingId","setEditingId","storedUsers","localStorage","getItem","JSON","parse","setItem","stringify","validateForm","formIsValid","tempErrors","trim","handleEdit","id","user","find","handleSave","map","isEditing","resetForm","handleSubmit","event","preventDefault","newUser","Date","now","children","onSubmit","type","fileName","_jsxFileName","lineNumber","columnNumber","length","value","onChange","e","target","onClick","_c","$RefreshReg$"],"sources":["/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/UserRegistration.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./UserRegistration\";\n\ninterface Errors {\n  userName?: string;\n  postalCode?: string;\n  address?: string;\n}\n\ninterface User {\n  id: number;\n  userName: string;\n  postalCode: string;\n  address: string;\n  isEditing: boolean;\n}\n\nconst UserRegistration = () => {\n  const [userName, setUserName] = useState<string>(\"\");\n  const [postalCode, setPostalCode] = useState<string>(\"\");\n  const [address, setAddress] = useState<string>(\"\");\n  const [errors, setErrors] = useState<Errors>({});\n  const [users, setUsers] = useState<User[]>([]); // ユーザーリストの状態\n  const [editingId, setEditingId] = useState<number | null>(null);\n\n  // コンポーネントがマウントされた時にローカルストレージからデータを読み込む\n  useEffect(() => {\n    const storedUsers = localStorage.getItem(\"users\");\n    if (storedUsers) {\n      setUsers(JSON.parse(storedUsers));\n    }\n  }, []);\n\n  // ユーザーリストが変更された時にローカルストレージを更新する\n  useEffect(() => {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  }, [users]);\n\n  const validateForm = () => {\n    let formIsValid = true;\n    let tempErrors: Errors = {};\n\n    if (!userName.trim()) {\n      formIsValid = false;\n      tempErrors.userName = \"ユーザー名を入力してください。\";\n    }\n    if (!postalCode.trim()) {\n      formIsValid = false;\n      tempErrors.postalCode = \"郵便番号を入力してください。\";\n    }\n    if (!address.trim()) {\n      formIsValid = false;\n      tempErrors[\"address\"] = \"住所を入力してください。\";\n    }\n\n    setErrors(tempErrors);\n    return formIsValid;\n  };\n\n  const handleEdit = (id: number) => {\n    setEditingId(id);\n    const user = users.find((user) => user.id === id);\n    if (user) {\n      setUserName(user.userName);\n      setPostalCode(user.postalCode);\n      setAddress(user.address);\n    }\n  };\n\n  const handleSave = (id: number) => {\n    setUsers(\n      users.map((user) =>\n        user.id === id\n          ? { ...user, userName, postalCode, address, isEditing: false }\n          : user\n      )\n    );\n    resetForm();\n  };\n\n  const handleSubmit = (event: React.FormEvent) => {\n    event.preventDefault();\n    if (editingId !== null) {\n      handleSave(editingId);\n    } else {\n      if (validateForm()) {\n        const newUser: User = {\n          id: Date.now(), // ユニークなIDを生成\n          userName,\n          postalCode,\n          address,\n          isEditing: false,\n        };\n        setUsers([...users, newUser]);\n        resetForm();\n      }\n    }\n  };\n\n  const resetForm = () => {\n    setUserName(\"\");\n    setPostalCode(\"\");\n    setAddress(\"\");\n    setEditingId(null);\n  };\n\n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        {/* 略: フォームフィールドと送信/保存ボタン */}\n        <button type=\"submit\">{editingId !== null ? \"保存\" : \"登録\"}</button>\n      </form>\n\n      {users.length > 0 && (\n        <table>\n          <thead>\n            <tr>\n              <th>ユーザー名</th>\n              <th>郵便番号</th>\n              <th>住所</th>\n              <th>操作</th>\n            </tr>\n          </thead>\n          <tbody>\n            {users.map((user) => (\n              <tr key={user.id}>\n                <td>\n                  {user.isEditing ? (\n                    <input\n                      type=\"text\"\n                      value={userName}\n                      onChange={(e) => setUserName(e.target.value)}\n                    />\n                  ) : (\n                    user.userName\n                  )}\n                </td>\n                <td>\n                  {user.isEditing ? (\n                    <input\n                      type=\"text\"\n                      value={postalCode}\n                      onChange={(e) => setPostalCode(e.target.value)}\n                    />\n                  ) : (\n                    user.postalCode\n                  )}\n                </td>\n                <td>\n                  {user.isEditing ? (\n                    <input\n                      type=\"text\"\n                      value={address}\n                      onChange={(e) => setAddress(e.target.value)}\n                    />\n                  ) : (\n                    user.address\n                  )}\n                </td>\n                <td>\n                  {user.isEditing ? (\n                    <button onClick={() => handleSave(user.id)}>保存</button>\n                  ) : (\n                    <button onClick={() => handleEdit(user.id)}>編集</button>\n                  )}\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      )}\n    </div>\n  );\n};\n\nexport default UserRegistration;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}