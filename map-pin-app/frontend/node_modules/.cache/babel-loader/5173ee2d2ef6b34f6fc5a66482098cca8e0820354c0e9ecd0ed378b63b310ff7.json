{"ast":null,"code":"var _jsxFileName = \"/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\n// App.tsx\nimport React, { useCallback, useState } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: \"70%\",\n  height: \"400px\"\n};\nconst tokyoStationPosition = {\n  lat: 35.681236,\n  lng: 139.767125\n};\nconst defaultPosition = {\n  lat: 35.6895,\n  lng: 139.6917\n};\nfunction App() {\n  _s();\n  const [address, setAddress] = useState(\"\");\n  const [postalCode, setPostalCode] = useState(\"\");\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n  const [position, setPosition] = useState(defaultPosition);\n  const handleSearch = async () => {\n    try {\n      const response = await fetch(`/geocode?address=${address || postalCode}`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      if (data.status === \"OK\") {\n        const location = data.results[0].geometry.location;\n        setPosition({\n          lat: location.lat,\n          lng: location.lng\n        });\n        setLat(location.lat);\n        setLng(location.lng);\n      } else {\n        console.error(\"Error fetching coordinates:\", data.status);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  // 現在地を取得する関数\n  const getCurrentLocation = useCallback(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n        console.log(\"Latitude:\", position.coords.latitude);\n        console.log(\"Longitude:\", position.coords.longitude);\n      }, error => {\n        console.error(\"Error getting location:\", error);\n      });\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n  const handleMapLoad = map => {\n    console.log(\"Google Map is loaded!\", map);\n  };\n  const handleMapClick = e => {\n    console.log(\"Map clicked at:\", e.latLng.toString());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"30%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u4F4F\\u6240:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: address,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u90F5\\u4FBF\\u756A\\u53F7:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: postalCode,\n          onChange: e => setPostalCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getCurrentLocation,\n        children: \"\\u73FE\\u5728\\u5730\\u3092\\u53D6\\u5F97\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"\\u691C\\u7D22\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u7DEF\\u5EA6: \", lat ? lat.toFixed(6) : \"N/A\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this), \"\\u7D4C\\u5EA6: \", lng ? lng.toFixed(6) : \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || \"\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: position,\n        zoom: 13,\n        onLoad: handleMapLoad // 地図が読み込まれたときにhandleMapLoadが呼び出される\n        ,\n        onClick: handleMapClick // 地図がクリックされたときにhandleMapClickが呼び出される\n        ,\n        children: [/*#__PURE__*/_jsxDEV(Marker, {\n          position: tokyoStationPosition\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this), position && /*#__PURE__*/_jsxDEV(Marker, {\n          position: position\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 24\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xP5k9TmCcGmnvfG0/LeE48WmMxo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","useState","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","containerStyle","width","height","tokyoStationPosition","lat","lng","defaultPosition","App","_s","address","setAddress","postalCode","setPostalCode","setLat","setLng","position","setPosition","handleSearch","response","fetch","ok","Error","data","json","status","location","results","geometry","console","error","getCurrentLocation","navigator","geolocation","getCurrentPosition","log","coords","latitude","longitude","handleMapLoad","map","handleMapClick","e","latLng","toString","style","display","children","fileName","_jsxFileName","lineNumber","columnNumber","value","onChange","target","onClick","toFixed","googleMapsApiKey","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","mapContainerStyle","center","zoom","onLoad","_c","$RefreshReg$"],"sources":["/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/App.tsx"],"sourcesContent":["// App.tsx\nimport React, { useCallback, useState } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\n\nconst containerStyle = {\n  width: \"70%\",\n  height: \"400px\",\n};\n\nconst tokyoStationPosition = {\n  lat: 35.681236,\n  lng: 139.767125,\n};\n\nconst defaultPosition = {\n  lat: 35.6895,\n  lng: 139.6917,\n};\n\nfunction App() {\n  const [address, setAddress] = useState(\"\");\n  const [postalCode, setPostalCode] = useState(\"\");\n  const [lat, setLat] = useState<number | null>(null);\n  const [lng, setLng] = useState<number | null>(null);\n\n  const [position, setPosition] = useState<\n    { lat: number; lng: number } | undefined\n  >(defaultPosition);\n\n  const handleSearch = async () => {\n    try {\n        const response = await fetch(`/geocode?address=${address || postalCode}`);\n\n        if (!response.ok) {\n            throw new Error(\"Network response was not ok\");\n        }\n\n        const data = await response.json();\n\n        if (data.status === \"OK\") {\n            const location = data.results[0].geometry.location;\n            setPosition({ lat: location.lat, lng: location.lng });\n            setLat(location.lat);\n            setLng(location.lng);\n        } else {\n            console.error(\"Error fetching coordinates:\", data.status);\n        }\n    } catch (error) {\n        console.error(\"Error:\", error);\n    }\n};\n\n  // 現在地を取得する関数\n  const getCurrentLocation = useCallback(() => {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(\n        (position) => {\n          console.log(\"Latitude:\", position.coords.latitude);\n          console.log(\"Longitude:\", position.coords.longitude);\n        },\n        (error) => {\n          console.error(\"Error getting location:\", error);\n        }\n      );\n    } else {\n      console.error(\"Geolocation is not supported by this browser.\");\n    }\n  }, []);\n\n  const handleMapLoad = (map: any) => {\n    console.log(\"Google Map is loaded!\", map);\n  };\n\n  const handleMapClick = (e: any) => {\n    console.log(\"Map clicked at:\", e.latLng.toString());\n  };\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <div style={{ width: \"30%\" }}>\n        <div>\n          <label>住所:</label>\n          <input value={address} onChange={(e) => setAddress(e.target.value)} />\n        </div>\n        <div>\n          <label>郵便番号:</label>\n          <input\n            value={postalCode}\n            onChange={(e) => setPostalCode(e.target.value)}\n          />\n        </div>\n        {/* 現在地を取得するボタンを追加 */}\n        <button onClick={getCurrentLocation}>現在地を取得</button>\n        <button onClick={handleSearch}>検索</button>\n        <div>\n          緯度: {lat ? lat.toFixed(6) : \"N/A\"}\n          <br />\n          経度: {lng ? lng.toFixed(6) : \"N/A\"}\n        </div>\n      </div>\n      <LoadScript\n        googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY || \"\"}\n      >\n        <GoogleMap\n          mapContainerStyle={containerStyle}\n          center={position}\n          zoom={13}\n          onLoad={handleMapLoad} // 地図が読み込まれたときにhandleMapLoadが呼び出される\n          onClick={handleMapClick} // 地図がクリックされたときにhandleMapClickが呼び出される\n        >\n          {/* 東京駅の上にマーカーを配置 */}\n          <Marker position={tokyoStationPosition} />\n          {position && <Marker position={position} />}\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}