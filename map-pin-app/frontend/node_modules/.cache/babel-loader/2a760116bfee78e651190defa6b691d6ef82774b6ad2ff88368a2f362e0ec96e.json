{"ast":null,"code":"var _jsxFileName = \"/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useState } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst containerStyle = {\n  width: \"70%\",\n  height: \"400px\"\n};\nconst defaultPosition = {\n  lat: 35.681236,\n  lng: 139.767125\n};\nconst RedMarker = props => {\n  const icon = {\n    path: window.google.maps.SymbolPath.CIRCLE,\n    fillColor: 'red',\n    fillOpacity: 1,\n    strokeColor: 'red',\n    strokeOpacity: 1,\n    scale: 5\n  };\n  return /*#__PURE__*/_jsxDEV(Marker, {\n    position: props.position,\n    icon: icon\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 10\n  }, this);\n};\n_c = RedMarker;\nfunction App() {\n  _s();\n  const [address, setAddress] = useState(\"\");\n  const [postalCode, setPostalCode] = useState(\"\");\n  const [lat, setLat] = useState(null);\n  const [lng, setLng] = useState(null);\n  const [position, setPosition] = useState(defaultPosition);\n  console.log(\"Google Maps API Key:\", process.env.REACT_APP_GOOGLE_MAPS_API_KEY);\n  const handleSearch = async () => {\n    try {\n      const response = await fetch(`/geocode?address=${address || postalCode}`);\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      if (data.status === \"OK\") {\n        const location = data.results[0].geometry.location;\n        setPosition({\n          lat: location.lat,\n          lng: location.lng\n        });\n        setLat(location.lat);\n        setLng(location.lng);\n      } else {\n        console.error(\"Error fetching coordinates:\", data.status);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  // 現在地を取得する関数\n  const getCurrentLocation = useCallback(async () => {\n    try {\n      const response = await fetch('/current-location');\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      if (data.location) {\n        setPosition({\n          lat: data.location.lat,\n          lng: data.location.lng\n        });\n        setLat(data.location.lat);\n        setLng(data.location.lng);\n      } else {\n        console.error(\"Error fetching current location\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  }, []);\n  const handleMapLoad = map => {\n    console.log('Position:', position);\n    console.log(\"Google Map is loaded!\", map);\n  };\n  const handleMapClick = e => {\n    console.log(\"Map clicked at:\", e.latLng.toString());\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: \"flex\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: {\n        width: \"30%\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u4F4F\\u6240:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: address,\n          onChange: e => setAddress(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"\\u90F5\\u4FBF\\u756A\\u53F7:\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: postalCode,\n          onChange: e => setPostalCode(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: getCurrentLocation,\n        children: \"\\u73FE\\u5728\\u5730\\u3092\\u53D6\\u5F97\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSearch,\n        children: \"\\u691C\\u7D22\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"\\u7DEF\\u5EA6: \", lat ? lat.toFixed(6) : \"N/A\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), \"\\u7D4C\\u5EA6: \", lng ? lng.toFixed(6) : \"N/A\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LoadScript, {\n      googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || \"\",\n      children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n        mapContainerStyle: containerStyle,\n        center: position,\n        zoom: 13,\n        onLoad: handleMapLoad // 地図が読み込まれたときにhandleMapLoadが呼び出される\n        ,\n        onClick: handleMapClick // 地図がクリックされたときにhandleMapClickが呼び出される\n        ,\n        children: position && /*#__PURE__*/_jsxDEV(Marker, {\n          position: position,\n          icon: {\n            path: google.maps.SymbolPath.CIRCLE,\n            // 円形のアイコンを指定\n            fillColor: 'red',\n            // 塗りつぶし色を赤に設定\n            fillOpacity: 1,\n            // 塗りつぶしの透明度を100%に設定\n            strokeColor: 'red',\n            // 縁取りの色を赤に設定\n            strokeOpacity: 1,\n            // 縁取りの透明度を100%に設定\n            scale: 5 // アイコンのサイズを指定\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 96,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"xP5k9TmCcGmnvfG0/LeE48WmMxo=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"RedMarker\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["React","useCallback","useState","GoogleMap","LoadScript","Marker","jsxDEV","_jsxDEV","containerStyle","width","height","defaultPosition","lat","lng","RedMarker","props","icon","path","window","google","maps","SymbolPath","CIRCLE","fillColor","fillOpacity","strokeColor","strokeOpacity","scale","position","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","address","setAddress","postalCode","setPostalCode","setLat","setLng","setPosition","console","log","process","env","REACT_APP_GOOGLE_MAPS_API_KEY","handleSearch","response","fetch","ok","Error","data","json","status","location","results","geometry","error","getCurrentLocation","handleMapLoad","map","handleMapClick","e","latLng","toString","style","display","children","value","onChange","target","onClick","toFixed","googleMapsApiKey","mapContainerStyle","center","zoom","onLoad","_c2","$RefreshReg$"],"sources":["/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/App.tsx"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { GoogleMap, LoadScript, Marker } from \"@react-google-maps/api\";\n\nconst containerStyle = {\n  width: \"70%\",\n  height: \"400px\",\n};\n\nconst defaultPosition = {\n  lat: 35.681236,\n  lng: 139.767125,\n};\n\nconst RedMarker = (props: { position: { lat: number; lng: number } }) => {\n  const icon = {\n    path: window.google.maps.SymbolPath.CIRCLE, \n    fillColor: 'red',\n    fillOpacity: 1,\n    strokeColor: 'red',\n    strokeOpacity: 1,\n    scale: 5\n  };\n  return <Marker position={props.position} icon={icon} />;\n};\n\n\nfunction App() {\n  const [address, setAddress] = useState(\"\");\n  const [postalCode, setPostalCode] = useState(\"\");\n  const [lat, setLat] = useState<number | null>(null);\n  const [lng, setLng] = useState<number | null>(null);\n\n  const [position, setPosition] = useState<\n    { lat: number; lng: number } | undefined\n  >(defaultPosition);\n\n  console.log(\"Google Maps API Key:\", process.env.REACT_APP_GOOGLE_MAPS_API_KEY);\n\n  const handleSearch = async () => {\n    try {\n        const response = await fetch(`/geocode?address=${address || postalCode}`);\n\n        if (!response.ok) {\n            throw new Error(\"Network response was not ok\");\n        }\n\n        const data = await response.json();\n\n        if (data.status === \"OK\") {\n            const location = data.results[0].geometry.location;\n            setPosition({ lat: location.lat, lng: location.lng });\n            setLat(location.lat);\n            setLng(location.lng);\n        } else {\n            console.error(\"Error fetching coordinates:\", data.status);\n        }\n    } catch (error) {\n        console.error(\"Error:\", error);\n    }\n};\n\n  // 現在地を取得する関数\n  const getCurrentLocation = useCallback(async () => {\n    try {\n        const response = await fetch('/current-location');\n\n        if (!response.ok) {\n            throw new Error(\"Network response was not ok\");\n        }\n\n        const data = await response.json();\n\n        if (data.location) {\n            setPosition({ lat: data.location.lat, lng: data.location.lng });\n            setLat(data.location.lat);\n            setLng(data.location.lng);\n        } else {\n            console.error(\"Error fetching current location\");\n        }\n    } catch (error) {\n        console.error(\"Error:\", error);\n    }\n}, []);\n\n  const handleMapLoad = (map: any) => {\n    console.log('Position:', position);\n\n    console.log(\"Google Map is loaded!\", map);\n  };\n\n  const handleMapClick = (e: any) => {\n    console.log(\"Map clicked at:\", e.latLng.toString());\n  };\n\n  return (\n    <div style={{ display: \"flex\" }}>\n      <div style={{ width: \"30%\" }}>\n        <div>\n          <label>住所:</label>\n          <input value={address} onChange={(e) => setAddress(e.target.value)} />\n        </div>\n        <div>\n          <label>郵便番号:</label>\n          <input\n            value={postalCode}\n            onChange={(e) => setPostalCode(e.target.value)}\n          />\n        </div>\n        {/* 現在地を取得するボタンを追加 */}\n        <button onClick={getCurrentLocation}>現在地を取得</button>\n        <button onClick={handleSearch}>検索</button>\n        <div>\n          緯度: {lat ? lat.toFixed(6) : \"N/A\"}\n          <br />\n          経度: {lng ? lng.toFixed(6) : \"N/A\"}\n        </div>\n      </div>\n      <LoadScript\n        googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY || \"\"}\n      >\n        <GoogleMap\n          mapContainerStyle={containerStyle}\n          center={position}\n          zoom={13}\n          onLoad={handleMapLoad} // 地図が読み込まれたときにhandleMapLoadが呼び出される\n          onClick={handleMapClick} // 地図がクリックされたときにhandleMapClickが呼び出される\n        >\n          {position && \n          <Marker position={position} \n          icon={{\n            path: google.maps.SymbolPath.CIRCLE,  // 円形のアイコンを指定\n            fillColor: 'red',  // 塗りつぶし色を赤に設定\n            fillOpacity: 1,  // 塗りつぶしの透明度を100%に設定\n            strokeColor: 'red',  // 縁取りの色を赤に設定\n            strokeOpacity: 1,  // 縁取りの透明度を100%に設定\n            scale: 5  // アイコンのサイズを指定\n          }} />\n\n            }\n        </GoogleMap>\n      </LoadScript>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}