{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\n\n// 以下の部分でwindowオブジェクトの型を拡張\n\nfunction useGoogleMapsAPI(apiKey) {\n  _s();\n  const [isLoaded, setIsLoaded] = useState(false);\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&callback=initGoogleMapsAPILoaded`;\n    script.async = true;\n    script.defer = true;\n    window.initGoogleMapsAPILoaded = () => setIsLoaded(true);\n    const existingScript = document.querySelector(`script[src^=\"https://maps.googleapis.com/maps/api/js?key=\"]`);\n    if (!existingScript) {\n      document.body.appendChild(script);\n    }\n    return () => {\n      document.body.removeChild(script);\n      window.initGoogleMapsAPILoaded = undefined;\n    };\n  }, [apiKey]);\n  return isLoaded;\n}\n_s(useGoogleMapsAPI, \"e/1lVN3R6kIvuSIAmUIHNmZXQsc=\");\nexport default useGoogleMapsAPI;","map":{"version":3,"names":["useState","useEffect","useGoogleMapsAPI","apiKey","_s","isLoaded","setIsLoaded","script","document","createElement","src","async","defer","window","initGoogleMapsAPILoaded","existingScript","querySelector","body","appendChild","removeChild","undefined"],"sources":["/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/useGoogleMapsAPI.ts"],"sourcesContent":["import { useState, useEffect } from 'react';\n\n// 以下の部分でwindowオブジェクトの型を拡張\ndeclare global {\n  interface Window {\n    initGoogleMapsAPILoaded?: () => void | undefined;\n  }\n}\n\nfunction useGoogleMapsAPI(apiKey: string) {\n  const [isLoaded, setIsLoaded] = useState(false);\n\n  useEffect(() => {\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&callback=initGoogleMapsAPILoaded`;\n    script.async = true;\n    script.defer = true;\n    window.initGoogleMapsAPILoaded = () => setIsLoaded(true);\n    const existingScript = document.querySelector(`script[src^=\"https://maps.googleapis.com/maps/api/js?key=\"]`);\n    if (!existingScript) {\n      document.body.appendChild(script);\n    }\n\n    return () => {\n      document.body.removeChild(script);\n      window.initGoogleMapsAPILoaded = undefined; \n    };\n  }, [apiKey]);\n\n  return isLoaded;\n}\n\nexport default useGoogleMapsAPI;"],"mappings":";AAAA,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;;AAE3C;;AAOA,SAASC,gBAAgBA,CAACC,MAAc,EAAE;EAAAC,EAAA;EACxC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGN,QAAQ,CAAC,KAAK,CAAC;EAE/CC,SAAS,CAAC,MAAM;IACd,MAAMM,MAAM,GAAGC,QAAQ,CAACC,aAAa,CAAC,QAAQ,CAAC;IAC/CF,MAAM,CAACG,GAAG,GAAI,+CAA8CP,MAAO,mCAAkC;IACrGI,MAAM,CAACI,KAAK,GAAG,IAAI;IACnBJ,MAAM,CAACK,KAAK,GAAG,IAAI;IACnBC,MAAM,CAACC,uBAAuB,GAAG,MAAMR,WAAW,CAAC,IAAI,CAAC;IACxD,MAAMS,cAAc,GAAGP,QAAQ,CAACQ,aAAa,CAAE,6DAA4D,CAAC;IAC5G,IAAI,CAACD,cAAc,EAAE;MACnBP,QAAQ,CAACS,IAAI,CAACC,WAAW,CAACX,MAAM,CAAC;IACnC;IAEA,OAAO,MAAM;MACXC,QAAQ,CAACS,IAAI,CAACE,WAAW,CAACZ,MAAM,CAAC;MACjCM,MAAM,CAACC,uBAAuB,GAAGM,SAAS;IAC5C,CAAC;EACH,CAAC,EAAE,CAACjB,MAAM,CAAC,CAAC;EAEZ,OAAOE,QAAQ;AACjB;AAACD,EAAA,CArBQF,gBAAgB;AAuBzB,eAAeA,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}