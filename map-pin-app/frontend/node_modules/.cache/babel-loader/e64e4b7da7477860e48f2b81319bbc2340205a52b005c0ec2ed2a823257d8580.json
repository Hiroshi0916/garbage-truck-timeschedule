{"ast":null,"code":"var _jsxFileName = \"/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/UserRegistration.tsx\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport \"./UserRegistration\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst UserRegistration = () => {\n  _s();\n  const [newUserName, setNewUserName] = useState(\"\");\n  const [newAddress, setNewAddress] = useState(\"\");\n  const [users, setUsers] = useState([]);\n  const [editingId, setEditingId] = useState(null);\n  const [errors, setErrors] = useState({});\n  const [newUserEmail, setNewUserEmail] = useState(\"\");\n  useEffect(() => {\n    const storedUsers = localStorage.getItem(\"users\");\n    if (storedUsers) {\n      setUsers(JSON.parse(storedUsers));\n    }\n  }, []);\n\n  // ユーザーリストが変更された時にローカルストレージを更新する\n  useEffect(() => {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  }, [users]);\n  const handleRegister = () => {\n    if (validateForm()) {\n      const newUser = {\n        id: Date.now(),\n        userName: newUserName,\n        address: newAddress\n        // Add userEmail to newUser if needed\n      };\n\n      setUsers([...users, newUser]);\n      // Clear the form fields\n      setNewUserName(\"\");\n      setNewAddress(\"\");\n      setNewUserEmail(\"\"); // Clear userEmail if state hook is added\n      setErrors({});\n    }\n  };\n  const handleSave = () => {\n    if (editingId !== null && validateForm()) {\n      setUsers(users.map(user => {\n        if (user.id === editingId) {\n          return {\n            ...user,\n            userName: newUserName,\n            address: newAddress,\n            email: newUserEmail // Set isEditing flag to false after saving\n          };\n        }\n\n        return user;\n      }));\n      // Reset the form and editing state\n      setEditingId(null);\n      setNewUserName(\"\");\n      setNewAddress(\"\");\n      // setNewUserEmail(\"\");\n      setErrors({});\n    }\n  };\n  const handleEdit = id => {\n    const user = users.find(u => u.id === id);\n    if (user) {\n      setEditingId(id);\n      setNewUserName(user.userName);\n      setNewAddress(user.address);\n      // Set the email if you're using it\n      // setNewUserEmail(user.email);\n      // Set isEditing flag to true for the editing user\n      setUsers(users.map(u => u.id === id ? {\n        ...u,\n        isEditing: true\n      } : u));\n    }\n  };\n  const validateForm = () => {\n    let formIsValid = true;\n    let tempErrors = {};\n    if (!newUserName.trim()) {\n      formIsValid = false;\n      tempErrors.userName = \"ユーザー名を入力してください。\";\n    }\n    if (!newAddress.trim()) {\n      formIsValid = false;\n      tempErrors[\"address\"] = \"住所を入力してください。\";\n    }\n    setErrors(tempErrors); // Update the errors state\n    return formIsValid;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"table-container\",\n      children: /*#__PURE__*/_jsxDEV(\"table\", {\n        className: \"table\",\n        children: /*#__PURE__*/_jsxDEV(\"tbody\", {\n          children: [/*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u540D\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newUserName,\n                onChange: e => setNewUserName(e.target.value),\n                placeholder: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u540D\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this), errors.userName && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.userName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u30A2\\u30C9\\u30EC\\u30B9\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: /*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newUserEmail,\n                onChange: e => setNewUserEmail(e.target.value),\n                placeholder: \"\\u30E6\\u30FC\\u30B6\\u30FC\\u30A2\\u30C9\\u30EC\\u30B9\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 5\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 3\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"tr\", {\n            children: [/*#__PURE__*/_jsxDEV(\"th\", {\n              children: \"\\u5C45\\u4F4F\\u5730\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n              children: [/*#__PURE__*/_jsxDEV(\"input\", {\n                type: \"text\",\n                value: newAddress,\n                onChange: e => setNewAddress(e.target.value),\n                placeholder: \"\\u5C45\\u4F4F\\u5730\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this), errors.address && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"error\",\n                children: errors.address\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"button-container\",\n      children: editingId === null ?\n      /*#__PURE__*/\n      // Show this button only when not editing\n      _jsxDEV(\"button\", {\n        onClick: handleRegister,\n        children: \"\\u767B\\u9332\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 11\n      }, this) :\n      /*#__PURE__*/\n      // Show this button only when editing\n      _jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"\\u7DE8\\u96C6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 167,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), users.map(user => /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"user-item\",\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: [user.userName, \" - \", user.address, \" \", user.email && `- ${user.email}`]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 5\n      }, this), editingId === user.id ? /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleSave,\n        children: \"\\u4FDD\\u5B58\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 7\n      }, this) : /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => handleEdit(user.id),\n        children: \"\\u7DE8\\u96C6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 180,\n        columnNumber: 7\n      }, this)]\n    }, user.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 3\n    }, this))]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n};\n_s(UserRegistration, \"vI7G9moHBJKAaxxUws+3PyW6OSw=\");\n_c = UserRegistration;\nexport default UserRegistration;\nvar _c;\n$RefreshReg$(_c, \"UserRegistration\");","map":{"version":3,"names":["React","useEffect","useState","jsxDEV","_jsxDEV","UserRegistration","_s","newUserName","setNewUserName","newAddress","setNewAddress","users","setUsers","editingId","setEditingId","errors","setErrors","newUserEmail","setNewUserEmail","storedUsers","localStorage","getItem","JSON","parse","setItem","stringify","handleRegister","validateForm","newUser","id","Date","now","userName","address","handleSave","map","user","email","handleEdit","find","u","isEditing","formIsValid","tempErrors","trim","children","className","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","onClick","_c","$RefreshReg$"],"sources":["/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/UserRegistration.tsx"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\nimport \"./UserRegistration\";\n\ninterface Errors {\n  userName?: string;\n  postalCode?: string;\n  address?: string;\n}\n\ninterface User {\n  id: number;\n  userName: string;\n  postalCode?: string;\n  address: string;\n  email?: string;\n  isEditing?: boolean;\n}\n\nconst UserRegistration = () => {\n  const [newUserName, setNewUserName] = useState<string>(\"\");\n  const [newAddress, setNewAddress] = useState<string>(\"\");\n  const [users, setUsers] = useState<User[]>([]);\n  const [editingId, setEditingId] = useState<number | null>(null);\n  const [errors, setErrors] = useState<Errors>({});\n\n  const [newUserEmail, setNewUserEmail] = useState<string>(\"\");\n\n  useEffect(() => {\n    const storedUsers = localStorage.getItem(\"users\");\n    if (storedUsers) {\n      setUsers(JSON.parse(storedUsers));\n    }\n  }, []);\n\n  // ユーザーリストが変更された時にローカルストレージを更新する\n  useEffect(() => {\n    localStorage.setItem(\"users\", JSON.stringify(users));\n  }, [users]);\n\n  const handleRegister = () => {\n    if (validateForm()) {\n      const newUser: User = {\n        id: Date.now(),\n        userName: newUserName,\n        address: newAddress,\n        // Add userEmail to newUser if needed\n      };\n      setUsers([...users, newUser]);\n      // Clear the form fields\n      setNewUserName(\"\");\n      setNewAddress(\"\");\n      setNewUserEmail(\"\"); // Clear userEmail if state hook is added\n      setErrors({});\n    }\n  };\n\n  const handleSave = () => {\n    if (editingId !== null && validateForm()) {\n      setUsers(\n        users.map((user) => {\n          if (user.id === editingId) {\n            return {\n              ...user,\n              userName: newUserName,\n              address: newAddress,\n              email: newUserEmail, // Set isEditing flag to false after saving\n            };\n          }\n          return user;\n        })\n      );\n      // Reset the form and editing state\n      setEditingId(null);\n      setNewUserName(\"\");\n      setNewAddress(\"\");\n      // setNewUserEmail(\"\");\n      setErrors({});\n    }\n  };\n\n  const handleEdit = (id: number) => {\n    const user = users.find((u) => u.id === id);\n    if (user) {\n      setEditingId(id);\n      setNewUserName(user.userName);\n      setNewAddress(user.address);\n      // Set the email if you're using it\n      // setNewUserEmail(user.email);\n      // Set isEditing flag to true for the editing user\n      setUsers(users.map((u) => (u.id === id ? { ...u, isEditing: true } : u)));\n    }\n  };\n\n  const validateForm = () => {\n    let formIsValid = true;\n    let tempErrors: Errors = {};\n\n    if (!newUserName.trim()) {\n      formIsValid = false;\n      tempErrors.userName = \"ユーザー名を入力してください。\";\n    }\n    if (!newAddress.trim()) {\n      formIsValid = false;\n      tempErrors[\"address\"] = \"住所を入力してください。\";\n    }\n\n    setErrors(tempErrors); // Update the errors state\n    return formIsValid;\n  };\n\n  return (\n    <div>\n      <div className=\"table-container\">\n        <table className=\"table\">\n          <tbody>\n            <tr>\n              <th>ユーザー名</th>\n              <td>\n                <input\n                  type=\"text\"\n                  value={newUserName}\n                  onChange={(e) => setNewUserName(e.target.value)}\n                  placeholder=\"ユーザー名\"\n                />\n                {errors.userName && (\n                  <div className=\"error\">{errors.userName}</div>\n                )}\n              </td>\n            </tr>\n            <tr>\n            <th>ユーザーアドレス</th>\n  <td>\n    <input\n      type=\"text\"\n      value={newUserEmail}\n      onChange={(e) => setNewUserEmail(e.target.value)}\n      placeholder=\"ユーザーアドレス\"\n    />\n    {/* Implement error display for newUserEmail if applicable */}\n  </td>\n            </tr>\n            <tr>\n              <th>居住地</th>\n              <td>\n                <input\n                  type=\"text\"\n                  value={newAddress}\n                  onChange={(e) => setNewAddress(e.target.value)}\n                  placeholder=\"居住地\"\n                />\n                {errors.address && (\n                  <div className=\"error\">{errors.address}</div>\n                )}\n              </td>\n            </tr>\n          </tbody>\n        </table>\n      </div>\n\n      <div className=\"button-container\">\n        {/* Conditionally render the buttons based on whether editingId is not null */}\n        {editingId === null ? (\n          // Show this button only when not editing\n          <button onClick={handleRegister}>登録</button>\n        ) : (\n          // Show this button only when editing\n          <button onClick={handleSave}>編集</button>\n        )}\n        {/* Render edit buttons next to each user row instead */}\n      </div>\n\n      {users.map((user) => (\n  <div key={user.id} className=\"user-item\">\n    <span>\n      {user.userName} - {user.address} {user.email && `- ${user.email}`}\n    </span>\n    {editingId === user.id ? (\n      <button onClick={handleSave}>保存</button>\n    ) : (\n      <button onClick={() => handleEdit(user.id)}>編集</button>\n    )}\n  </div>\n))}\n    </div>\n  );\n};\n\n\nexport default UserRegistration;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}