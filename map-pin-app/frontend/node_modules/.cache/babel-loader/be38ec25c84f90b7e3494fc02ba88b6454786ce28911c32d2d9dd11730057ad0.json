{"ast":null,"code":"var _jsxFileName = \"/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/App.tsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from \"react\";\nimport { LoadScript } from \"@react-google-maps/api\";\nimport Navbar from \"./Navbar\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\nimport AdminPage from \"./AdminPage\";\nimport { SearchForm } from \"./SearchForm\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst BASE_URL = process.env.REACT_APP_BACKEND_URL;\nconst defaultPosition = {\n  lat: 35.681236,\n  lng: 139.767125\n};\nfunction App() {\n  _s();\n  const getCurrentLocation = useCallback(async () => {\n    try {\n      const response = await fetch(\"/current-location\");\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  }, []);\n  const handleSearch = async (address, postalCode) => {\n    // ここで住所または郵便番号に基づいて検索処理を行い、結果を onSearch コールバックに渡す\n    console.log(\"Sending address:\", address);\n    try {\n      const response = await fetch(`${BASE_URL}/geocode?address=${address || postalCode}`, {\n        method: \"GET\"\n      });\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n      const data = await response.json();\n      if (data.status === \"OK\") {\n        const location = data.results[0].geometry.location;\n        console.log(location);\n      } else {\n        console.error(\"Error fetching coordinates:\", data.status);\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: process.env.REACT_APP_GOOGLE_MAPS_API_KEY || \"\",\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"App-layout\",\n            children: /*#__PURE__*/_jsxDEV(SearchForm, {\n              onSearch: handleSearch,\n              onGetCurrentLocation: getCurrentLocation\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin\",\n          element: /*#__PURE__*/_jsxDEV(AdminPage, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 41\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"AV0ETRpHw5+ybMNm8yLGk3DRqt8=\");\n_c = App;\nexport default App;\n\n// import React from 'react';\n// import GoogleMapComponent from './GoogleMapComponent';\n\n// function App() {\n//   return (\n//     <div>\n//       <GoogleMapComponent />\n//     </div>\n//   );\n// }\n\n// export default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useCallback","LoadScript","Navbar","BrowserRouter","Router","Routes","Route","AdminPage","SearchForm","jsxDEV","_jsxDEV","BASE_URL","process","env","REACT_APP_BACKEND_URL","defaultPosition","lat","lng","App","_s","getCurrentLocation","response","fetch","ok","Error","error","console","handleSearch","address","postalCode","log","method","data","json","status","location","results","geometry","googleMapsApiKey","REACT_APP_GOOGLE_MAPS_API_KEY","children","fileName","_jsxFileName","lineNumber","columnNumber","path","element","className","onSearch","onGetCurrentLocation","_c","$RefreshReg$"],"sources":["/Users/hiroshiobata/dev/garbage-truck-timeschedule/map-pin-app/frontend/src/App.tsx"],"sourcesContent":["import React, { useCallback, useState } from \"react\";\nimport { GoogleMap, LoadScript } from \"@react-google-maps/api\";\nimport Navbar from \"./Navbar\";\nimport \"./App.css\";\nimport { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nimport AdminPage from \"./AdminPage\";\nimport { SearchForm } from \"./SearchForm\";\n\nconst BASE_URL = process.env.REACT_APP_BACKEND_URL;\n\nconst defaultPosition = {\n  lat: 35.681236,\n  lng: 139.767125,\n};\n\nfunction App() {\n\n\n\n  const getCurrentLocation = useCallback(async () => {\n    try {\n      const response = await fetch(\"/current-location\");\n\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  }, []);\n\n\n\n  const handleSearch = async (address: string, postalCode: string) => {\n    // ここで住所または郵便番号に基づいて検索処理を行い、結果を onSearch コールバックに渡す\n    console.log(\"Sending address:\", address);\n    try {\n      const response = await fetch(`${BASE_URL}/geocode?address=${address || postalCode}`, {\n        method: \"GET\", \n      });\n\n      if (!response.ok) {\n        throw new Error(\"Network response was not ok\");\n      }\n\n      const data = await response.json();\n\n      if (data.status === \"OK\") {\n        const location = data.results[0].geometry.location;\n        console.log(location);\n\n      } else {\n        console.error(\"Error fetching coordinates:\", data.status);\n      }\n\n    } catch (error) {\n      console.error(\"Error:\", error);\n    }\n  };\n\n  return (\n    <LoadScript\n      googleMapsApiKey={process.env.REACT_APP_GOOGLE_MAPS_API_KEY || \"\"}\n    >\n      <Router>\n        <Navbar />\n        <Routes>\n          <Route\n            path=\"/\"\n            element={\n              <div className=\"App-layout\">\n                <SearchForm\n                  onSearch={handleSearch}\n                  onGetCurrentLocation={getCurrentLocation}\n                />\n              </div>\n            }\n          />\n\n          <Route path=\"/admin\" element={<AdminPage />} />\n        </Routes>\n      </Router>\n    </LoadScript>\n  );\n}\n\nexport default App;\n\n// import React from 'react';\n// import GoogleMapComponent from './GoogleMapComponent';\n\n// function App() {\n//   return (\n//     <div>\n//       <GoogleMapComponent />\n//     </div>\n//   );\n// }\n\n// export default App;\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAkB,OAAO;AACpD,SAAoBC,UAAU,QAAQ,wBAAwB;AAC9D,OAAOC,MAAM,MAAM,UAAU;AAC7B,OAAO,WAAW;AAClB,SAASC,aAAa,IAAIC,MAAM,EAAEC,MAAM,EAAEC,KAAK,QAAQ,kBAAkB;AAEzE,OAAOC,SAAS,MAAM,aAAa;AACnC,SAASC,UAAU,QAAQ,cAAc;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1C,MAAMC,QAAQ,GAAGC,OAAO,CAACC,GAAG,CAACC,qBAAqB;AAElD,MAAMC,eAAe,GAAG;EACtBC,GAAG,EAAE,SAAS;EACdC,GAAG,EAAE;AACP,CAAC;AAED,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EAIb,MAAMC,kBAAkB,GAAGpB,WAAW,CAAC,YAAY;IACjD,IAAI;MACF,MAAMqB,QAAQ,GAAG,MAAMC,KAAK,CAAC,mBAAmB,CAAC;MAEjD,IAAI,CAACD,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;IAGF,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC,EAAE,EAAE,CAAC;EAIN,MAAME,YAAY,GAAG,MAAAA,CAAOC,OAAe,EAAEC,UAAkB,KAAK;IAClE;IACAH,OAAO,CAACI,GAAG,CAAC,kBAAkB,EAAEF,OAAO,CAAC;IACxC,IAAI;MACF,MAAMP,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEX,QAAS,oBAAmBiB,OAAO,IAAIC,UAAW,EAAC,EAAE;QACnFE,MAAM,EAAE;MACV,CAAC,CAAC;MAEF,IAAI,CAACV,QAAQ,CAACE,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,6BAA6B,CAAC;MAChD;MAEA,MAAMQ,IAAI,GAAG,MAAMX,QAAQ,CAACY,IAAI,CAAC,CAAC;MAElC,IAAID,IAAI,CAACE,MAAM,KAAK,IAAI,EAAE;QACxB,MAAMC,QAAQ,GAAGH,IAAI,CAACI,OAAO,CAAC,CAAC,CAAC,CAACC,QAAQ,CAACF,QAAQ;QAClDT,OAAO,CAACI,GAAG,CAACK,QAAQ,CAAC;MAEvB,CAAC,MAAM;QACLT,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEO,IAAI,CAACE,MAAM,CAAC;MAC3D;IAEF,CAAC,CAAC,OAAOT,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAChC;EACF,CAAC;EAED,oBACEf,OAAA,CAACT,UAAU;IACTqC,gBAAgB,EAAE1B,OAAO,CAACC,GAAG,CAAC0B,6BAA6B,IAAI,EAAG;IAAAC,QAAA,eAElE9B,OAAA,CAACN,MAAM;MAAAoC,QAAA,gBACL9B,OAAA,CAACR,MAAM;QAAAuC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACVlC,OAAA,CAACL,MAAM;QAAAmC,QAAA,gBACL9B,OAAA,CAACJ,KAAK;UACJuC,IAAI,EAAC,GAAG;UACRC,OAAO,eACLpC,OAAA;YAAKqC,SAAS,EAAC,YAAY;YAAAP,QAAA,eACzB9B,OAAA,CAACF,UAAU;cACTwC,QAAQ,EAAErB,YAAa;cACvBsB,oBAAoB,EAAE7B;YAAmB;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC1C;UAAC;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC;QACN;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACF,CAAC,eAEFlC,OAAA,CAACJ,KAAK;UAACuC,IAAI,EAAC,QAAQ;UAACC,OAAO,eAAEpC,OAAA,CAACH,SAAS;YAAAkC,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAE;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACzC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACC,CAAC;AAEjB;AAACzB,EAAA,CAvEQD,GAAG;AAAAgC,EAAA,GAAHhC,GAAG;AAyEZ,eAAeA,GAAG;;AAElB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAAA,IAAAgC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}